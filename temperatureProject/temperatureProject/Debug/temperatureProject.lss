
temperatureProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000071a  0000078e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000071a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000798  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007c8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000808  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009c9  00000000  00000000  00000850  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000773  00000000  00000000  00001219  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003f0  00000000  00000000  0000198c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  00001d7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000046c  00000000  00000000  00001e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000229  00000000  00000000  00002278  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000024a1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e1       	ldi	r30, 0x1A	; 26
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 aa 00 	call	0x154	; 0x154 <main>
  8e:	0c 94 8b 03 	jmp	0x716	; 0x716 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <adc_init>:
	PORTC = (1<<BUTTON); // pullup
}

void adc_init(void) // initialize adc
{
	ADMUX = 0xC0; // Vref = 1.1V
  96:	80 ec       	ldi	r24, 0xC0	; 192
  98:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = 0x87; // enable ADC; set speed to 125KHz
  9c:	87 e8       	ldi	r24, 0x87	; 135
  9e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  a2:	08 95       	ret

000000a4 <adc_conversion>:
}

void adc_conversion(void)
{
	ADCSRA |= (1 << ADSC); // start ADC conversion
  a4:	ea e7       	ldi	r30, 0x7A	; 122
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	80 64       	ori	r24, 0x40	; 64
  ac:	80 83       	st	Z, r24
	while ((ADCSRA & (1 << ADIF)) == 0); // wait until ADC finishes
  ae:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  b2:	84 ff       	sbrs	r24, 4
  b4:	fc cf       	rjmp	.-8      	; 0xae <adc_conversion+0xa>
}
  b6:	08 95       	ret

000000b8 <segment_init>:

void segment_init(void) // set up pins for 7 segment display
{
	DDRD = 0xFF; //7 segment pins high
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	8a b9       	out	0x0a, r24	; 10
	DDRB = (1<<DIG1)|(1<<DIG2)|(1<<DIG3)|(1<<DIG4); //enable digits
  bc:	8e e1       	ldi	r24, 0x1E	; 30
  be:	84 b9       	out	0x04, r24	; 4
  c0:	08 95       	ret

000000c2 <init>:
	}
}

void init(void)
{
	adc_init();
  c2:	0e 94 4b 00 	call	0x96	; 0x96 <adc_init>
	segment_init();
  c6:	0e 94 5c 00 	call	0xb8	; 0xb8 <segment_init>
	PORTC = (1<<BUTTON); // pullup
  ca:	82 e0       	ldi	r24, 0x02	; 2
  cc:	88 b9       	out	0x08, r24	; 8
  ce:	08 95       	ret

000000d0 <displayTemp>:
	DDRD = 0xFF; //7 segment pins high
	DDRB = (1<<DIG1)|(1<<DIG2)|(1<<DIG3)|(1<<DIG4); //enable digits
}

void displayTemp(unsigned char ledDigits[], unsigned char tempDigits[], unsigned char ledDegrees)
{
  d0:	cf 93       	push	r28
  d2:	df 93       	push	r29
  d4:	dc 01       	movw	r26, r24
  d6:	fb 01       	movw	r30, r22
	unsigned char numRepeats = 100, persistence = 1, i = 0; //loop & timing variables
	
	for(i=0;i<numRepeats;i++)
  d8:	20 e0       	ldi	r18, 0x00	; 0
  da:	37 c0       	rjmp	.+110    	; 0x14a <displayTemp+0x7a>
	{
		// tens digit
		PORTD = ledDigits[tempDigits[0]]; 
  dc:	80 81       	ld	r24, Z
  de:	ed 01       	movw	r28, r26
  e0:	c8 0f       	add	r28, r24
  e2:	d1 1d       	adc	r29, r1
  e4:	88 81       	ld	r24, Y
  e6:	8b b9       	out	0x0b, r24	; 11
		PORTB = ~(1<<DIG1);
  e8:	8d ef       	ldi	r24, 0xFD	; 253
  ea:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ec:	8f e9       	ldi	r24, 0x9F	; 159
  ee:	9f e0       	ldi	r25, 0x0F	; 15
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <displayTemp+0x20>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <displayTemp+0x26>
  f6:	00 00       	nop
		_delay_ms(persistence);

		//ones digit
		PORTD = ledDigits[tempDigits[1]];
  f8:	81 81       	ldd	r24, Z+1	; 0x01
  fa:	ed 01       	movw	r28, r26
  fc:	c8 0f       	add	r28, r24
  fe:	d1 1d       	adc	r29, r1
 100:	88 81       	ld	r24, Y
 102:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0x80; //add decimal point
 104:	9b b1       	in	r25, 0x0b	; 11
 106:	90 68       	ori	r25, 0x80	; 128
 108:	9b b9       	out	0x0b, r25	; 11
		PORTB = ~(1<<DIG2);
 10a:	8b ef       	ldi	r24, 0xFB	; 251
 10c:	85 b9       	out	0x05, r24	; 5
 10e:	8f e9       	ldi	r24, 0x9F	; 159
 110:	9f e0       	ldi	r25, 0x0F	; 15
 112:	01 97       	sbiw	r24, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <displayTemp+0x42>
 116:	00 c0       	rjmp	.+0      	; 0x118 <displayTemp+0x48>
 118:	00 00       	nop
		_delay_ms(persistence);

		//tenths digit
		PORTD = ledDigits[tempDigits[2]];
 11a:	82 81       	ldd	r24, Z+2	; 0x02
 11c:	ed 01       	movw	r28, r26
 11e:	c8 0f       	add	r28, r24
 120:	d1 1d       	adc	r29, r1
 122:	88 81       	ld	r24, Y
 124:	8b b9       	out	0x0b, r24	; 11
		PORTB = ~(1<<DIG3);
 126:	87 ef       	ldi	r24, 0xF7	; 247
 128:	85 b9       	out	0x05, r24	; 5
 12a:	8f e9       	ldi	r24, 0x9F	; 159
 12c:	9f e0       	ldi	r25, 0x0F	; 15
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <displayTemp+0x5e>
 132:	00 c0       	rjmp	.+0      	; 0x134 <displayTemp+0x64>
 134:	00 00       	nop
		_delay_ms(persistence);

		//degrees symbol
		PORTD = ledDegrees;
 136:	4b b9       	out	0x0b, r20	; 11
		PORTB = ~(1<<DIG4);
 138:	8f ee       	ldi	r24, 0xEF	; 239
 13a:	85 b9       	out	0x05, r24	; 5
 13c:	8f e9       	ldi	r24, 0x9F	; 159
 13e:	9f e0       	ldi	r25, 0x0F	; 15
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <displayTemp+0x70>
 144:	00 c0       	rjmp	.+0      	; 0x146 <displayTemp+0x76>
 146:	00 00       	nop

void displayTemp(unsigned char ledDigits[], unsigned char tempDigits[], unsigned char ledDegrees)
{
	unsigned char numRepeats = 100, persistence = 1, i = 0; //loop & timing variables
	
	for(i=0;i<numRepeats;i++)
 148:	2f 5f       	subi	r18, 0xFF	; 255
 14a:	24 36       	cpi	r18, 0x64	; 100
 14c:	38 f2       	brcs	.-114    	; 0xdc <displayTemp+0xc>
		//degrees symbol
		PORTD = ledDegrees;
		PORTB = ~(1<<DIG4);
		_delay_ms(persistence);
	}
 14e:	df 91       	pop	r29
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <main>:
#define DIG4 4 //B4, enables DIG4

# define BUTTON 1 //PORTD

int main(void)
{
 154:	cf 93       	push	r28
 156:	df 93       	push	r29
 158:	cd b7       	in	r28, 0x3d	; 61
 15a:	de b7       	in	r29, 0x3e	; 62
 15c:	60 97       	sbiw	r28, 0x10	; 16
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	f8 94       	cli
 162:	de bf       	out	0x3e, r29	; 62
 164:	0f be       	out	0x3f, r0	; 63
 166:	cd bf       	out	0x3d, r28	; 61
	float voltInt;
	float tempC;
	float tempF;
	
	//7 segment display variables
	unsigned char ledDigits[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
 168:	8a e0       	ldi	r24, 0x0A	; 10
 16a:	e0 e0       	ldi	r30, 0x00	; 0
 16c:	f1 e0       	ldi	r31, 0x01	; 1
 16e:	de 01       	movw	r26, r28
 170:	11 96       	adiw	r26, 0x01	; 1
 172:	01 90       	ld	r0, Z+
 174:	0d 92       	st	X+, r0
 176:	8a 95       	dec	r24
 178:	e1 f7       	brne	.-8      	; 0x172 <main+0x1e>
	unsigned char ledDegrees[] = {0x71, 0x39}; // Fahrenheit, Celsius
	
	unsigned char F_digit[3]; //array of Fahrenheit digits
	unsigned char C_digit[3]; //array of Celsius digits
	
	init();
 17a:	0e 94 61 00 	call	0xc2	; 0xc2 <init>
	
	while (1)
	{
		adc_conversion();
 17e:	0e 94 52 00 	call	0xa4	; 0xa4 <adc_conversion>
		digitalValue = ADCL | (ADCH << 8);
 182:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 186:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 18a:	70 e0       	ldi	r23, 0x00	; 0
 18c:	76 2f       	mov	r23, r22
 18e:	66 27       	eor	r22, r22
 190:	68 2b       	or	r22, r24
		voltInt = digitalValue *1.1/1.024; // voltage in mV
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	0e 94 68 02 	call	0x4d0	; 0x4d0 <__floatunsisf>
 19a:	2d ec       	ldi	r18, 0xCD	; 205
 19c:	3c ec       	ldi	r19, 0xCC	; 204
 19e:	4c e8       	ldi	r20, 0x8C	; 140
 1a0:	5f e3       	ldi	r21, 0x3F	; 63
 1a2:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__mulsf3>
 1a6:	2f e6       	ldi	r18, 0x6F	; 111
 1a8:	32 e1       	ldi	r19, 0x12	; 18
 1aa:	43 e8       	ldi	r20, 0x83	; 131
 1ac:	5f e3       	ldi	r21, 0x3F	; 63
 1ae:	0e 94 c0 01 	call	0x380	; 0x380 <__divsf3>
		
		tempC = ((float)(voltInt - 750)/10 +25); // temp in Celsius
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e8       	ldi	r19, 0x80	; 128
 1b6:	4b e3       	ldi	r20, 0x3B	; 59
 1b8:	54 e4       	ldi	r21, 0x44	; 68
 1ba:	0e 94 53 01 	call	0x2a6	; 0x2a6 <__subsf3>
 1be:	20 e0       	ldi	r18, 0x00	; 0
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	40 e2       	ldi	r20, 0x20	; 32
 1c4:	51 e4       	ldi	r21, 0x41	; 65
 1c6:	0e 94 c0 01 	call	0x380	; 0x380 <__divsf3>
 1ca:	20 e0       	ldi	r18, 0x00	; 0
 1cc:	30 e0       	ldi	r19, 0x00	; 0
 1ce:	48 ec       	ldi	r20, 0xC8	; 200
 1d0:	51 e4       	ldi	r21, 0x41	; 65
 1d2:	0e 94 54 01 	call	0x2a8	; 0x2a8 <__addsf3>
 1d6:	6b 01       	movw	r12, r22
 1d8:	7c 01       	movw	r14, r24
		int tempCDisplay = tempC * 10; // get rid of decimal place
 1da:	20 e0       	ldi	r18, 0x00	; 0
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	40 e2       	ldi	r20, 0x20	; 32
 1e0:	51 e4       	ldi	r21, 0x41	; 65
 1e2:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__mulsf3>
 1e6:	0e 94 32 02 	call	0x464	; 0x464 <__fixsfsi>
 1ea:	8b 01       	movw	r16, r22
		
		tempF = tempC * 9 / 5 + 32; // temp in Fahrenheit
 1ec:	20 e0       	ldi	r18, 0x00	; 0
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	40 e1       	ldi	r20, 0x10	; 16
 1f2:	51 e4       	ldi	r21, 0x41	; 65
 1f4:	c7 01       	movw	r24, r14
 1f6:	b6 01       	movw	r22, r12
 1f8:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__mulsf3>
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	40 ea       	ldi	r20, 0xA0	; 160
 202:	50 e4       	ldi	r21, 0x40	; 64
 204:	0e 94 c0 01 	call	0x380	; 0x380 <__divsf3>
 208:	20 e0       	ldi	r18, 0x00	; 0
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	40 e0       	ldi	r20, 0x00	; 0
 20e:	52 e4       	ldi	r21, 0x42	; 66
 210:	0e 94 54 01 	call	0x2a8	; 0x2a8 <__addsf3>
		int tempFDisplay = tempF * 10; // get rid of decimal place
 214:	20 e0       	ldi	r18, 0x00	; 0
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	40 e2       	ldi	r20, 0x20	; 32
 21a:	51 e4       	ldi	r21, 0x41	; 65
 21c:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__mulsf3>
 220:	0e 94 32 02 	call	0x464	; 0x464 <__fixsfsi>
 224:	7b 01       	movw	r14, r22
		
		F_digit[0]=(tempFDisplay/100)%100; //ten's place
 226:	e4 e6       	ldi	r30, 0x64	; 100
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	cb 01       	movw	r24, r22
 22c:	bf 01       	movw	r22, r30
 22e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__divmodhi4>
 232:	cb 01       	movw	r24, r22
 234:	bf 01       	movw	r22, r30
 236:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__divmodhi4>
 23a:	8b 87       	std	Y+11, r24	; 0x0b
		F_digit[1]=(tempFDisplay/10)%10; //one's place
 23c:	2a e0       	ldi	r18, 0x0A	; 10
 23e:	30 e0       	ldi	r19, 0x00	; 0
 240:	c7 01       	movw	r24, r14
 242:	b9 01       	movw	r22, r18
 244:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__divmodhi4>
 248:	48 2f       	mov	r20, r24
 24a:	cb 01       	movw	r24, r22
 24c:	b9 01       	movw	r22, r18
 24e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__divmodhi4>
 252:	8c 87       	std	Y+12, r24	; 0x0c
		F_digit[2]=tempFDisplay%10; // decimal value
 254:	4d 87       	std	Y+13, r20	; 0x0d
		
		C_digit[0]=(tempCDisplay/100)%100; //tens place
 256:	c8 01       	movw	r24, r16
 258:	bf 01       	movw	r22, r30
 25a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__divmodhi4>
 25e:	cb 01       	movw	r24, r22
 260:	bf 01       	movw	r22, r30
 262:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__divmodhi4>
 266:	8e 87       	std	Y+14, r24	; 0x0e
		C_digit[1]=(tempCDisplay/10)%10; //ones place
 268:	c8 01       	movw	r24, r16
 26a:	b9 01       	movw	r22, r18
 26c:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__divmodhi4>
 270:	48 2f       	mov	r20, r24
 272:	cb 01       	movw	r24, r22
 274:	b9 01       	movw	r22, r18
 276:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__divmodhi4>
 27a:	8f 87       	std	Y+15, r24	; 0x0f
		C_digit[2]=tempCDisplay%10; //decimal place
 27c:	48 8b       	std	Y+16, r20	; 0x10
		
		if (!(PINC & (1<<BUTTON))) // test if switch pressed
 27e:	31 99       	sbic	0x06, 1	; 6
 280:	09 c0       	rjmp	.+18     	; 0x294 <main+0x140>
		{
			displayTemp(ledDigits, C_digit, ledDegrees[1]); //temp in C
 282:	49 e3       	ldi	r20, 0x39	; 57
 284:	be 01       	movw	r22, r28
 286:	62 5f       	subi	r22, 0xF2	; 242
 288:	7f 4f       	sbci	r23, 0xFF	; 255
 28a:	ce 01       	movw	r24, r28
 28c:	01 96       	adiw	r24, 0x01	; 1
 28e:	0e 94 68 00 	call	0xd0	; 0xd0 <displayTemp>
 292:	75 cf       	rjmp	.-278    	; 0x17e <main+0x2a>
		}
		else
		{
			displayTemp(ledDigits, F_digit, ledDegrees[0]); //temp in F
 294:	41 e7       	ldi	r20, 0x71	; 113
 296:	be 01       	movw	r22, r28
 298:	65 5f       	subi	r22, 0xF5	; 245
 29a:	7f 4f       	sbci	r23, 0xFF	; 255
 29c:	ce 01       	movw	r24, r28
 29e:	01 96       	adiw	r24, 0x01	; 1
 2a0:	0e 94 68 00 	call	0xd0	; 0xd0 <displayTemp>
 2a4:	6c cf       	rjmp	.-296    	; 0x17e <main+0x2a>

000002a6 <__subsf3>:
 2a6:	50 58       	subi	r21, 0x80	; 128

000002a8 <__addsf3>:
 2a8:	bb 27       	eor	r27, r27
 2aa:	aa 27       	eor	r26, r26
 2ac:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <__addsf3x>
 2b0:	0c 94 bc 02 	jmp	0x578	; 0x578 <__fp_round>
 2b4:	0e 94 ae 02 	call	0x55c	; 0x55c <__fp_pscA>
 2b8:	38 f0       	brcs	.+14     	; 0x2c8 <__addsf3+0x20>
 2ba:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_pscB>
 2be:	20 f0       	brcs	.+8      	; 0x2c8 <__addsf3+0x20>
 2c0:	39 f4       	brne	.+14     	; 0x2d0 <__addsf3+0x28>
 2c2:	9f 3f       	cpi	r25, 0xFF	; 255
 2c4:	19 f4       	brne	.+6      	; 0x2cc <__addsf3+0x24>
 2c6:	26 f4       	brtc	.+8      	; 0x2d0 <__addsf3+0x28>
 2c8:	0c 94 ab 02 	jmp	0x556	; 0x556 <__fp_nan>
 2cc:	0e f4       	brtc	.+2      	; 0x2d0 <__addsf3+0x28>
 2ce:	e0 95       	com	r30
 2d0:	e7 fb       	bst	r30, 7
 2d2:	0c 94 a5 02 	jmp	0x54a	; 0x54a <__fp_inf>

000002d6 <__addsf3x>:
 2d6:	e9 2f       	mov	r30, r25
 2d8:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_split3>
 2dc:	58 f3       	brcs	.-42     	; 0x2b4 <__addsf3+0xc>
 2de:	ba 17       	cp	r27, r26
 2e0:	62 07       	cpc	r22, r18
 2e2:	73 07       	cpc	r23, r19
 2e4:	84 07       	cpc	r24, r20
 2e6:	95 07       	cpc	r25, r21
 2e8:	20 f0       	brcs	.+8      	; 0x2f2 <__addsf3x+0x1c>
 2ea:	79 f4       	brne	.+30     	; 0x30a <__addsf3x+0x34>
 2ec:	a6 f5       	brtc	.+104    	; 0x356 <__addsf3x+0x80>
 2ee:	0c 94 ef 02 	jmp	0x5de	; 0x5de <__fp_zero>
 2f2:	0e f4       	brtc	.+2      	; 0x2f6 <__addsf3x+0x20>
 2f4:	e0 95       	com	r30
 2f6:	0b 2e       	mov	r0, r27
 2f8:	ba 2f       	mov	r27, r26
 2fa:	a0 2d       	mov	r26, r0
 2fc:	0b 01       	movw	r0, r22
 2fe:	b9 01       	movw	r22, r18
 300:	90 01       	movw	r18, r0
 302:	0c 01       	movw	r0, r24
 304:	ca 01       	movw	r24, r20
 306:	a0 01       	movw	r20, r0
 308:	11 24       	eor	r1, r1
 30a:	ff 27       	eor	r31, r31
 30c:	59 1b       	sub	r21, r25
 30e:	99 f0       	breq	.+38     	; 0x336 <__addsf3x+0x60>
 310:	59 3f       	cpi	r21, 0xF9	; 249
 312:	50 f4       	brcc	.+20     	; 0x328 <__addsf3x+0x52>
 314:	50 3e       	cpi	r21, 0xE0	; 224
 316:	68 f1       	brcs	.+90     	; 0x372 <__addsf3x+0x9c>
 318:	1a 16       	cp	r1, r26
 31a:	f0 40       	sbci	r31, 0x00	; 0
 31c:	a2 2f       	mov	r26, r18
 31e:	23 2f       	mov	r18, r19
 320:	34 2f       	mov	r19, r20
 322:	44 27       	eor	r20, r20
 324:	58 5f       	subi	r21, 0xF8	; 248
 326:	f3 cf       	rjmp	.-26     	; 0x30e <__addsf3x+0x38>
 328:	46 95       	lsr	r20
 32a:	37 95       	ror	r19
 32c:	27 95       	ror	r18
 32e:	a7 95       	ror	r26
 330:	f0 40       	sbci	r31, 0x00	; 0
 332:	53 95       	inc	r21
 334:	c9 f7       	brne	.-14     	; 0x328 <__addsf3x+0x52>
 336:	7e f4       	brtc	.+30     	; 0x356 <__addsf3x+0x80>
 338:	1f 16       	cp	r1, r31
 33a:	ba 0b       	sbc	r27, r26
 33c:	62 0b       	sbc	r22, r18
 33e:	73 0b       	sbc	r23, r19
 340:	84 0b       	sbc	r24, r20
 342:	ba f0       	brmi	.+46     	; 0x372 <__addsf3x+0x9c>
 344:	91 50       	subi	r25, 0x01	; 1
 346:	a1 f0       	breq	.+40     	; 0x370 <__addsf3x+0x9a>
 348:	ff 0f       	add	r31, r31
 34a:	bb 1f       	adc	r27, r27
 34c:	66 1f       	adc	r22, r22
 34e:	77 1f       	adc	r23, r23
 350:	88 1f       	adc	r24, r24
 352:	c2 f7       	brpl	.-16     	; 0x344 <__addsf3x+0x6e>
 354:	0e c0       	rjmp	.+28     	; 0x372 <__addsf3x+0x9c>
 356:	ba 0f       	add	r27, r26
 358:	62 1f       	adc	r22, r18
 35a:	73 1f       	adc	r23, r19
 35c:	84 1f       	adc	r24, r20
 35e:	48 f4       	brcc	.+18     	; 0x372 <__addsf3x+0x9c>
 360:	87 95       	ror	r24
 362:	77 95       	ror	r23
 364:	67 95       	ror	r22
 366:	b7 95       	ror	r27
 368:	f7 95       	ror	r31
 36a:	9e 3f       	cpi	r25, 0xFE	; 254
 36c:	08 f0       	brcs	.+2      	; 0x370 <__addsf3x+0x9a>
 36e:	b0 cf       	rjmp	.-160    	; 0x2d0 <__addsf3+0x28>
 370:	93 95       	inc	r25
 372:	88 0f       	add	r24, r24
 374:	08 f0       	brcs	.+2      	; 0x378 <__addsf3x+0xa2>
 376:	99 27       	eor	r25, r25
 378:	ee 0f       	add	r30, r30
 37a:	97 95       	ror	r25
 37c:	87 95       	ror	r24
 37e:	08 95       	ret

00000380 <__divsf3>:
 380:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__divsf3x>
 384:	0c 94 bc 02 	jmp	0x578	; 0x578 <__fp_round>
 388:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_pscB>
 38c:	58 f0       	brcs	.+22     	; 0x3a4 <__divsf3+0x24>
 38e:	0e 94 ae 02 	call	0x55c	; 0x55c <__fp_pscA>
 392:	40 f0       	brcs	.+16     	; 0x3a4 <__divsf3+0x24>
 394:	29 f4       	brne	.+10     	; 0x3a0 <__divsf3+0x20>
 396:	5f 3f       	cpi	r21, 0xFF	; 255
 398:	29 f0       	breq	.+10     	; 0x3a4 <__divsf3+0x24>
 39a:	0c 94 a5 02 	jmp	0x54a	; 0x54a <__fp_inf>
 39e:	51 11       	cpse	r21, r1
 3a0:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <__fp_szero>
 3a4:	0c 94 ab 02 	jmp	0x556	; 0x556 <__fp_nan>

000003a8 <__divsf3x>:
 3a8:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_split3>
 3ac:	68 f3       	brcs	.-38     	; 0x388 <__divsf3+0x8>

000003ae <__divsf3_pse>:
 3ae:	99 23       	and	r25, r25
 3b0:	b1 f3       	breq	.-20     	; 0x39e <__divsf3+0x1e>
 3b2:	55 23       	and	r21, r21
 3b4:	91 f3       	breq	.-28     	; 0x39a <__divsf3+0x1a>
 3b6:	95 1b       	sub	r25, r21
 3b8:	55 0b       	sbc	r21, r21
 3ba:	bb 27       	eor	r27, r27
 3bc:	aa 27       	eor	r26, r26
 3be:	62 17       	cp	r22, r18
 3c0:	73 07       	cpc	r23, r19
 3c2:	84 07       	cpc	r24, r20
 3c4:	38 f0       	brcs	.+14     	; 0x3d4 <__divsf3_pse+0x26>
 3c6:	9f 5f       	subi	r25, 0xFF	; 255
 3c8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ca:	22 0f       	add	r18, r18
 3cc:	33 1f       	adc	r19, r19
 3ce:	44 1f       	adc	r20, r20
 3d0:	aa 1f       	adc	r26, r26
 3d2:	a9 f3       	breq	.-22     	; 0x3be <__divsf3_pse+0x10>
 3d4:	35 d0       	rcall	.+106    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 3d6:	0e 2e       	mov	r0, r30
 3d8:	3a f0       	brmi	.+14     	; 0x3e8 <__divsf3_pse+0x3a>
 3da:	e0 e8       	ldi	r30, 0x80	; 128
 3dc:	32 d0       	rcall	.+100    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 3de:	91 50       	subi	r25, 0x01	; 1
 3e0:	50 40       	sbci	r21, 0x00	; 0
 3e2:	e6 95       	lsr	r30
 3e4:	00 1c       	adc	r0, r0
 3e6:	ca f7       	brpl	.-14     	; 0x3da <__divsf3_pse+0x2c>
 3e8:	2b d0       	rcall	.+86     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 3ea:	fe 2f       	mov	r31, r30
 3ec:	29 d0       	rcall	.+82     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 3ee:	66 0f       	add	r22, r22
 3f0:	77 1f       	adc	r23, r23
 3f2:	88 1f       	adc	r24, r24
 3f4:	bb 1f       	adc	r27, r27
 3f6:	26 17       	cp	r18, r22
 3f8:	37 07       	cpc	r19, r23
 3fa:	48 07       	cpc	r20, r24
 3fc:	ab 07       	cpc	r26, r27
 3fe:	b0 e8       	ldi	r27, 0x80	; 128
 400:	09 f0       	breq	.+2      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 402:	bb 0b       	sbc	r27, r27
 404:	80 2d       	mov	r24, r0
 406:	bf 01       	movw	r22, r30
 408:	ff 27       	eor	r31, r31
 40a:	93 58       	subi	r25, 0x83	; 131
 40c:	5f 4f       	sbci	r21, 0xFF	; 255
 40e:	3a f0       	brmi	.+14     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 410:	9e 3f       	cpi	r25, 0xFE	; 254
 412:	51 05       	cpc	r21, r1
 414:	78 f0       	brcs	.+30     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 416:	0c 94 a5 02 	jmp	0x54a	; 0x54a <__fp_inf>
 41a:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <__fp_szero>
 41e:	5f 3f       	cpi	r21, 0xFF	; 255
 420:	e4 f3       	brlt	.-8      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 422:	98 3e       	cpi	r25, 0xE8	; 232
 424:	d4 f3       	brlt	.-12     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 426:	86 95       	lsr	r24
 428:	77 95       	ror	r23
 42a:	67 95       	ror	r22
 42c:	b7 95       	ror	r27
 42e:	f7 95       	ror	r31
 430:	9f 5f       	subi	r25, 0xFF	; 255
 432:	c9 f7       	brne	.-14     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 434:	88 0f       	add	r24, r24
 436:	91 1d       	adc	r25, r1
 438:	96 95       	lsr	r25
 43a:	87 95       	ror	r24
 43c:	97 f9       	bld	r25, 7
 43e:	08 95       	ret
 440:	e1 e0       	ldi	r30, 0x01	; 1
 442:	66 0f       	add	r22, r22
 444:	77 1f       	adc	r23, r23
 446:	88 1f       	adc	r24, r24
 448:	bb 1f       	adc	r27, r27
 44a:	62 17       	cp	r22, r18
 44c:	73 07       	cpc	r23, r19
 44e:	84 07       	cpc	r24, r20
 450:	ba 07       	cpc	r27, r26
 452:	20 f0       	brcs	.+8      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 454:	62 1b       	sub	r22, r18
 456:	73 0b       	sbc	r23, r19
 458:	84 0b       	sbc	r24, r20
 45a:	ba 0b       	sbc	r27, r26
 45c:	ee 1f       	adc	r30, r30
 45e:	88 f7       	brcc	.-30     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 460:	e0 95       	com	r30
 462:	08 95       	ret

00000464 <__fixsfsi>:
 464:	0e 94 39 02 	call	0x472	; 0x472 <__fixunssfsi>
 468:	68 94       	set
 46a:	b1 11       	cpse	r27, r1
 46c:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <__fp_szero>
 470:	08 95       	ret

00000472 <__fixunssfsi>:
 472:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__fp_splitA>
 476:	88 f0       	brcs	.+34     	; 0x49a <__fixunssfsi+0x28>
 478:	9f 57       	subi	r25, 0x7F	; 127
 47a:	98 f0       	brcs	.+38     	; 0x4a2 <__fixunssfsi+0x30>
 47c:	b9 2f       	mov	r27, r25
 47e:	99 27       	eor	r25, r25
 480:	b7 51       	subi	r27, 0x17	; 23
 482:	b0 f0       	brcs	.+44     	; 0x4b0 <__fixunssfsi+0x3e>
 484:	e1 f0       	breq	.+56     	; 0x4be <__fixunssfsi+0x4c>
 486:	66 0f       	add	r22, r22
 488:	77 1f       	adc	r23, r23
 48a:	88 1f       	adc	r24, r24
 48c:	99 1f       	adc	r25, r25
 48e:	1a f0       	brmi	.+6      	; 0x496 <__fixunssfsi+0x24>
 490:	ba 95       	dec	r27
 492:	c9 f7       	brne	.-14     	; 0x486 <__fixunssfsi+0x14>
 494:	14 c0       	rjmp	.+40     	; 0x4be <__fixunssfsi+0x4c>
 496:	b1 30       	cpi	r27, 0x01	; 1
 498:	91 f0       	breq	.+36     	; 0x4be <__fixunssfsi+0x4c>
 49a:	0e 94 ef 02 	call	0x5de	; 0x5de <__fp_zero>
 49e:	b1 e0       	ldi	r27, 0x01	; 1
 4a0:	08 95       	ret
 4a2:	0c 94 ef 02 	jmp	0x5de	; 0x5de <__fp_zero>
 4a6:	67 2f       	mov	r22, r23
 4a8:	78 2f       	mov	r23, r24
 4aa:	88 27       	eor	r24, r24
 4ac:	b8 5f       	subi	r27, 0xF8	; 248
 4ae:	39 f0       	breq	.+14     	; 0x4be <__fixunssfsi+0x4c>
 4b0:	b9 3f       	cpi	r27, 0xF9	; 249
 4b2:	cc f3       	brlt	.-14     	; 0x4a6 <__fixunssfsi+0x34>
 4b4:	86 95       	lsr	r24
 4b6:	77 95       	ror	r23
 4b8:	67 95       	ror	r22
 4ba:	b3 95       	inc	r27
 4bc:	d9 f7       	brne	.-10     	; 0x4b4 <__fixunssfsi+0x42>
 4be:	3e f4       	brtc	.+14     	; 0x4ce <__fixunssfsi+0x5c>
 4c0:	90 95       	com	r25
 4c2:	80 95       	com	r24
 4c4:	70 95       	com	r23
 4c6:	61 95       	neg	r22
 4c8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ca:	8f 4f       	sbci	r24, 0xFF	; 255
 4cc:	9f 4f       	sbci	r25, 0xFF	; 255
 4ce:	08 95       	ret

000004d0 <__floatunsisf>:
 4d0:	e8 94       	clt
 4d2:	09 c0       	rjmp	.+18     	; 0x4e6 <__floatsisf+0x12>

000004d4 <__floatsisf>:
 4d4:	97 fb       	bst	r25, 7
 4d6:	3e f4       	brtc	.+14     	; 0x4e6 <__floatsisf+0x12>
 4d8:	90 95       	com	r25
 4da:	80 95       	com	r24
 4dc:	70 95       	com	r23
 4de:	61 95       	neg	r22
 4e0:	7f 4f       	sbci	r23, 0xFF	; 255
 4e2:	8f 4f       	sbci	r24, 0xFF	; 255
 4e4:	9f 4f       	sbci	r25, 0xFF	; 255
 4e6:	99 23       	and	r25, r25
 4e8:	a9 f0       	breq	.+42     	; 0x514 <__floatsisf+0x40>
 4ea:	f9 2f       	mov	r31, r25
 4ec:	96 e9       	ldi	r25, 0x96	; 150
 4ee:	bb 27       	eor	r27, r27
 4f0:	93 95       	inc	r25
 4f2:	f6 95       	lsr	r31
 4f4:	87 95       	ror	r24
 4f6:	77 95       	ror	r23
 4f8:	67 95       	ror	r22
 4fa:	b7 95       	ror	r27
 4fc:	f1 11       	cpse	r31, r1
 4fe:	f8 cf       	rjmp	.-16     	; 0x4f0 <__floatsisf+0x1c>
 500:	fa f4       	brpl	.+62     	; 0x540 <__floatsisf+0x6c>
 502:	bb 0f       	add	r27, r27
 504:	11 f4       	brne	.+4      	; 0x50a <__floatsisf+0x36>
 506:	60 ff       	sbrs	r22, 0
 508:	1b c0       	rjmp	.+54     	; 0x540 <__floatsisf+0x6c>
 50a:	6f 5f       	subi	r22, 0xFF	; 255
 50c:	7f 4f       	sbci	r23, 0xFF	; 255
 50e:	8f 4f       	sbci	r24, 0xFF	; 255
 510:	9f 4f       	sbci	r25, 0xFF	; 255
 512:	16 c0       	rjmp	.+44     	; 0x540 <__floatsisf+0x6c>
 514:	88 23       	and	r24, r24
 516:	11 f0       	breq	.+4      	; 0x51c <__floatsisf+0x48>
 518:	96 e9       	ldi	r25, 0x96	; 150
 51a:	11 c0       	rjmp	.+34     	; 0x53e <__floatsisf+0x6a>
 51c:	77 23       	and	r23, r23
 51e:	21 f0       	breq	.+8      	; 0x528 <__floatsisf+0x54>
 520:	9e e8       	ldi	r25, 0x8E	; 142
 522:	87 2f       	mov	r24, r23
 524:	76 2f       	mov	r23, r22
 526:	05 c0       	rjmp	.+10     	; 0x532 <__floatsisf+0x5e>
 528:	66 23       	and	r22, r22
 52a:	71 f0       	breq	.+28     	; 0x548 <__floatsisf+0x74>
 52c:	96 e8       	ldi	r25, 0x86	; 134
 52e:	86 2f       	mov	r24, r22
 530:	70 e0       	ldi	r23, 0x00	; 0
 532:	60 e0       	ldi	r22, 0x00	; 0
 534:	2a f0       	brmi	.+10     	; 0x540 <__floatsisf+0x6c>
 536:	9a 95       	dec	r25
 538:	66 0f       	add	r22, r22
 53a:	77 1f       	adc	r23, r23
 53c:	88 1f       	adc	r24, r24
 53e:	da f7       	brpl	.-10     	; 0x536 <__floatsisf+0x62>
 540:	88 0f       	add	r24, r24
 542:	96 95       	lsr	r25
 544:	87 95       	ror	r24
 546:	97 f9       	bld	r25, 7
 548:	08 95       	ret

0000054a <__fp_inf>:
 54a:	97 f9       	bld	r25, 7
 54c:	9f 67       	ori	r25, 0x7F	; 127
 54e:	80 e8       	ldi	r24, 0x80	; 128
 550:	70 e0       	ldi	r23, 0x00	; 0
 552:	60 e0       	ldi	r22, 0x00	; 0
 554:	08 95       	ret

00000556 <__fp_nan>:
 556:	9f ef       	ldi	r25, 0xFF	; 255
 558:	80 ec       	ldi	r24, 0xC0	; 192
 55a:	08 95       	ret

0000055c <__fp_pscA>:
 55c:	00 24       	eor	r0, r0
 55e:	0a 94       	dec	r0
 560:	16 16       	cp	r1, r22
 562:	17 06       	cpc	r1, r23
 564:	18 06       	cpc	r1, r24
 566:	09 06       	cpc	r0, r25
 568:	08 95       	ret

0000056a <__fp_pscB>:
 56a:	00 24       	eor	r0, r0
 56c:	0a 94       	dec	r0
 56e:	12 16       	cp	r1, r18
 570:	13 06       	cpc	r1, r19
 572:	14 06       	cpc	r1, r20
 574:	05 06       	cpc	r0, r21
 576:	08 95       	ret

00000578 <__fp_round>:
 578:	09 2e       	mov	r0, r25
 57a:	03 94       	inc	r0
 57c:	00 0c       	add	r0, r0
 57e:	11 f4       	brne	.+4      	; 0x584 <__fp_round+0xc>
 580:	88 23       	and	r24, r24
 582:	52 f0       	brmi	.+20     	; 0x598 <__fp_round+0x20>
 584:	bb 0f       	add	r27, r27
 586:	40 f4       	brcc	.+16     	; 0x598 <__fp_round+0x20>
 588:	bf 2b       	or	r27, r31
 58a:	11 f4       	brne	.+4      	; 0x590 <__fp_round+0x18>
 58c:	60 ff       	sbrs	r22, 0
 58e:	04 c0       	rjmp	.+8      	; 0x598 <__fp_round+0x20>
 590:	6f 5f       	subi	r22, 0xFF	; 255
 592:	7f 4f       	sbci	r23, 0xFF	; 255
 594:	8f 4f       	sbci	r24, 0xFF	; 255
 596:	9f 4f       	sbci	r25, 0xFF	; 255
 598:	08 95       	ret

0000059a <__fp_split3>:
 59a:	57 fd       	sbrc	r21, 7
 59c:	90 58       	subi	r25, 0x80	; 128
 59e:	44 0f       	add	r20, r20
 5a0:	55 1f       	adc	r21, r21
 5a2:	59 f0       	breq	.+22     	; 0x5ba <__fp_splitA+0x10>
 5a4:	5f 3f       	cpi	r21, 0xFF	; 255
 5a6:	71 f0       	breq	.+28     	; 0x5c4 <__fp_splitA+0x1a>
 5a8:	47 95       	ror	r20

000005aa <__fp_splitA>:
 5aa:	88 0f       	add	r24, r24
 5ac:	97 fb       	bst	r25, 7
 5ae:	99 1f       	adc	r25, r25
 5b0:	61 f0       	breq	.+24     	; 0x5ca <__fp_splitA+0x20>
 5b2:	9f 3f       	cpi	r25, 0xFF	; 255
 5b4:	79 f0       	breq	.+30     	; 0x5d4 <__fp_splitA+0x2a>
 5b6:	87 95       	ror	r24
 5b8:	08 95       	ret
 5ba:	12 16       	cp	r1, r18
 5bc:	13 06       	cpc	r1, r19
 5be:	14 06       	cpc	r1, r20
 5c0:	55 1f       	adc	r21, r21
 5c2:	f2 cf       	rjmp	.-28     	; 0x5a8 <__fp_split3+0xe>
 5c4:	46 95       	lsr	r20
 5c6:	f1 df       	rcall	.-30     	; 0x5aa <__fp_splitA>
 5c8:	08 c0       	rjmp	.+16     	; 0x5da <__fp_splitA+0x30>
 5ca:	16 16       	cp	r1, r22
 5cc:	17 06       	cpc	r1, r23
 5ce:	18 06       	cpc	r1, r24
 5d0:	99 1f       	adc	r25, r25
 5d2:	f1 cf       	rjmp	.-30     	; 0x5b6 <__fp_splitA+0xc>
 5d4:	86 95       	lsr	r24
 5d6:	71 05       	cpc	r23, r1
 5d8:	61 05       	cpc	r22, r1
 5da:	08 94       	sec
 5dc:	08 95       	ret

000005de <__fp_zero>:
 5de:	e8 94       	clt

000005e0 <__fp_szero>:
 5e0:	bb 27       	eor	r27, r27
 5e2:	66 27       	eor	r22, r22
 5e4:	77 27       	eor	r23, r23
 5e6:	cb 01       	movw	r24, r22
 5e8:	97 f9       	bld	r25, 7
 5ea:	08 95       	ret

000005ec <__mulsf3>:
 5ec:	0e 94 09 03 	call	0x612	; 0x612 <__mulsf3x>
 5f0:	0c 94 bc 02 	jmp	0x578	; 0x578 <__fp_round>
 5f4:	0e 94 ae 02 	call	0x55c	; 0x55c <__fp_pscA>
 5f8:	38 f0       	brcs	.+14     	; 0x608 <__mulsf3+0x1c>
 5fa:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_pscB>
 5fe:	20 f0       	brcs	.+8      	; 0x608 <__mulsf3+0x1c>
 600:	95 23       	and	r25, r21
 602:	11 f0       	breq	.+4      	; 0x608 <__mulsf3+0x1c>
 604:	0c 94 a5 02 	jmp	0x54a	; 0x54a <__fp_inf>
 608:	0c 94 ab 02 	jmp	0x556	; 0x556 <__fp_nan>
 60c:	11 24       	eor	r1, r1
 60e:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <__fp_szero>

00000612 <__mulsf3x>:
 612:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_split3>
 616:	70 f3       	brcs	.-36     	; 0x5f4 <__mulsf3+0x8>

00000618 <__mulsf3_pse>:
 618:	95 9f       	mul	r25, r21
 61a:	c1 f3       	breq	.-16     	; 0x60c <__mulsf3+0x20>
 61c:	95 0f       	add	r25, r21
 61e:	50 e0       	ldi	r21, 0x00	; 0
 620:	55 1f       	adc	r21, r21
 622:	62 9f       	mul	r22, r18
 624:	f0 01       	movw	r30, r0
 626:	72 9f       	mul	r23, r18
 628:	bb 27       	eor	r27, r27
 62a:	f0 0d       	add	r31, r0
 62c:	b1 1d       	adc	r27, r1
 62e:	63 9f       	mul	r22, r19
 630:	aa 27       	eor	r26, r26
 632:	f0 0d       	add	r31, r0
 634:	b1 1d       	adc	r27, r1
 636:	aa 1f       	adc	r26, r26
 638:	64 9f       	mul	r22, r20
 63a:	66 27       	eor	r22, r22
 63c:	b0 0d       	add	r27, r0
 63e:	a1 1d       	adc	r26, r1
 640:	66 1f       	adc	r22, r22
 642:	82 9f       	mul	r24, r18
 644:	22 27       	eor	r18, r18
 646:	b0 0d       	add	r27, r0
 648:	a1 1d       	adc	r26, r1
 64a:	62 1f       	adc	r22, r18
 64c:	73 9f       	mul	r23, r19
 64e:	b0 0d       	add	r27, r0
 650:	a1 1d       	adc	r26, r1
 652:	62 1f       	adc	r22, r18
 654:	83 9f       	mul	r24, r19
 656:	a0 0d       	add	r26, r0
 658:	61 1d       	adc	r22, r1
 65a:	22 1f       	adc	r18, r18
 65c:	74 9f       	mul	r23, r20
 65e:	33 27       	eor	r19, r19
 660:	a0 0d       	add	r26, r0
 662:	61 1d       	adc	r22, r1
 664:	23 1f       	adc	r18, r19
 666:	84 9f       	mul	r24, r20
 668:	60 0d       	add	r22, r0
 66a:	21 1d       	adc	r18, r1
 66c:	82 2f       	mov	r24, r18
 66e:	76 2f       	mov	r23, r22
 670:	6a 2f       	mov	r22, r26
 672:	11 24       	eor	r1, r1
 674:	9f 57       	subi	r25, 0x7F	; 127
 676:	50 40       	sbci	r21, 0x00	; 0
 678:	9a f0       	brmi	.+38     	; 0x6a0 <__mulsf3_pse+0x88>
 67a:	f1 f0       	breq	.+60     	; 0x6b8 <__mulsf3_pse+0xa0>
 67c:	88 23       	and	r24, r24
 67e:	4a f0       	brmi	.+18     	; 0x692 <__mulsf3_pse+0x7a>
 680:	ee 0f       	add	r30, r30
 682:	ff 1f       	adc	r31, r31
 684:	bb 1f       	adc	r27, r27
 686:	66 1f       	adc	r22, r22
 688:	77 1f       	adc	r23, r23
 68a:	88 1f       	adc	r24, r24
 68c:	91 50       	subi	r25, 0x01	; 1
 68e:	50 40       	sbci	r21, 0x00	; 0
 690:	a9 f7       	brne	.-22     	; 0x67c <__mulsf3_pse+0x64>
 692:	9e 3f       	cpi	r25, 0xFE	; 254
 694:	51 05       	cpc	r21, r1
 696:	80 f0       	brcs	.+32     	; 0x6b8 <__mulsf3_pse+0xa0>
 698:	0c 94 a5 02 	jmp	0x54a	; 0x54a <__fp_inf>
 69c:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <__fp_szero>
 6a0:	5f 3f       	cpi	r21, 0xFF	; 255
 6a2:	e4 f3       	brlt	.-8      	; 0x69c <__mulsf3_pse+0x84>
 6a4:	98 3e       	cpi	r25, 0xE8	; 232
 6a6:	d4 f3       	brlt	.-12     	; 0x69c <__mulsf3_pse+0x84>
 6a8:	86 95       	lsr	r24
 6aa:	77 95       	ror	r23
 6ac:	67 95       	ror	r22
 6ae:	b7 95       	ror	r27
 6b0:	f7 95       	ror	r31
 6b2:	e7 95       	ror	r30
 6b4:	9f 5f       	subi	r25, 0xFF	; 255
 6b6:	c1 f7       	brne	.-16     	; 0x6a8 <__mulsf3_pse+0x90>
 6b8:	fe 2b       	or	r31, r30
 6ba:	88 0f       	add	r24, r24
 6bc:	91 1d       	adc	r25, r1
 6be:	96 95       	lsr	r25
 6c0:	87 95       	ror	r24
 6c2:	97 f9       	bld	r25, 7
 6c4:	08 95       	ret

000006c6 <__divmodhi4>:
 6c6:	97 fb       	bst	r25, 7
 6c8:	07 2e       	mov	r0, r23
 6ca:	16 f4       	brtc	.+4      	; 0x6d0 <__divmodhi4+0xa>
 6cc:	00 94       	com	r0
 6ce:	07 d0       	rcall	.+14     	; 0x6de <__divmodhi4_neg1>
 6d0:	77 fd       	sbrc	r23, 7
 6d2:	09 d0       	rcall	.+18     	; 0x6e6 <__divmodhi4_neg2>
 6d4:	0e 94 77 03 	call	0x6ee	; 0x6ee <__udivmodhi4>
 6d8:	07 fc       	sbrc	r0, 7
 6da:	05 d0       	rcall	.+10     	; 0x6e6 <__divmodhi4_neg2>
 6dc:	3e f4       	brtc	.+14     	; 0x6ec <__divmodhi4_exit>

000006de <__divmodhi4_neg1>:
 6de:	90 95       	com	r25
 6e0:	81 95       	neg	r24
 6e2:	9f 4f       	sbci	r25, 0xFF	; 255
 6e4:	08 95       	ret

000006e6 <__divmodhi4_neg2>:
 6e6:	70 95       	com	r23
 6e8:	61 95       	neg	r22
 6ea:	7f 4f       	sbci	r23, 0xFF	; 255

000006ec <__divmodhi4_exit>:
 6ec:	08 95       	ret

000006ee <__udivmodhi4>:
 6ee:	aa 1b       	sub	r26, r26
 6f0:	bb 1b       	sub	r27, r27
 6f2:	51 e1       	ldi	r21, 0x11	; 17
 6f4:	07 c0       	rjmp	.+14     	; 0x704 <__udivmodhi4_ep>

000006f6 <__udivmodhi4_loop>:
 6f6:	aa 1f       	adc	r26, r26
 6f8:	bb 1f       	adc	r27, r27
 6fa:	a6 17       	cp	r26, r22
 6fc:	b7 07       	cpc	r27, r23
 6fe:	10 f0       	brcs	.+4      	; 0x704 <__udivmodhi4_ep>
 700:	a6 1b       	sub	r26, r22
 702:	b7 0b       	sbc	r27, r23

00000704 <__udivmodhi4_ep>:
 704:	88 1f       	adc	r24, r24
 706:	99 1f       	adc	r25, r25
 708:	5a 95       	dec	r21
 70a:	a9 f7       	brne	.-22     	; 0x6f6 <__udivmodhi4_loop>
 70c:	80 95       	com	r24
 70e:	90 95       	com	r25
 710:	bc 01       	movw	r22, r24
 712:	cd 01       	movw	r24, r26
 714:	08 95       	ret

00000716 <_exit>:
 716:	f8 94       	cli

00000718 <__stop_program>:
 718:	ff cf       	rjmp	.-2      	; 0x718 <__stop_program>
