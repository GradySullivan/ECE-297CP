
tempDisplayTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000007a0  00000814  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007a0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000081e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000850  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000890  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ae8  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000074f  00000000  00000000  000013d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000050f  00000000  00000000  00001b1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  00002030  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000491  00000000  00000000  000020e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003e5  00000000  00000000  00002575  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0000295a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ea       	ldi	r30, 0xA0	; 160
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  8e:	0c 94 ce 03 	jmp	0x79c	; 0x79c <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <adc_init>:

void blink(void) // led blink test
{
	PORTB |= (1<<BLUE_LED); // set PB0
	_delay_ms(250);
	PORTB &= ~(1<<BLUE_LED);
  96:	80 ec       	ldi	r24, 0xC0	; 192
  98:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  9c:	87 e8       	ldi	r24, 0x87	; 135
  9e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  a2:	08 95       	ret

000000a4 <adc_conversion>:
}

void adc_conversion(void)
{
	ADCSRA |= (1 << ADSC); // start ADC conversion
  a4:	ea e7       	ldi	r30, 0x7A	; 122
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	80 64       	ori	r24, 0x40	; 64
  ac:	80 83       	st	Z, r24
	while ((ADCSRA & (1 << ADIF)) == 0); // wait until ADC finishes
  ae:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  b2:	84 ff       	sbrs	r24, 4
  b4:	fc cf       	rjmp	.-8      	; 0xae <adc_conversion+0xa>
}
  b6:	08 95       	ret

000000b8 <segment_init>:

void segment_init(void) // set up pins for 7 segment display
{
	DDRD = 0xFF; //7 segment pins high
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	8a b9       	out	0x0a, r24	; 10
	DDRB = (1<<DIG1)|(1<<DIG2)|(1<<DIG3)|(1<<DIG4); //enable digits
  bc:	8e e1       	ldi	r24, 0x1E	; 30
  be:	84 b9       	out	0x04, r24	; 4
	PORTC = (1<<BUTTON); // pullup
  c0:	82 e0       	ldi	r24, 0x02	; 2
  c2:	88 b9       	out	0x08, r24	; 8
  c4:	08 95       	ret

000000c6 <main>:
#define DIG3 3 //B1, enables DIG3
#define DIG4 4 //B4, enables DIG4

# define BUTTON 1 //PORTD
int main(void)
{
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
  ce:	66 97       	sbiw	r28, 0x16	; 22
  d0:	0f b6       	in	r0, 0x3f	; 63
  d2:	f8 94       	cli
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	0f be       	out	0x3f, r0	; 63
  d8:	cd bf       	out	0x3d, r28	; 61
	char buffer[6];
	int F_digit[3];
	int C_digit[3];
	
	//7 segment display variables
	unsigned char i, ledDigits[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
  da:	8a e0       	ldi	r24, 0x0A	; 10
  dc:	e0 e0       	ldi	r30, 0x00	; 0
  de:	f1 e0       	ldi	r31, 0x01	; 1
  e0:	de 01       	movw	r26, r28
  e2:	1d 96       	adiw	r26, 0x0d	; 13
  e4:	01 90       	ld	r0, Z+
  e6:	0d 92       	st	X+, r0
  e8:	8a 95       	dec	r24
  ea:	e1 f7       	brne	.-8      	; 0xe4 <main+0x1e>
	0x07, 0x7F, 0x67};
	unsigned char ledDegrees[] = {0b01110001, 0b00111001};
  ec:	01 e7       	ldi	r16, 0x71	; 113
  ee:	19 e3       	ldi	r17, 0x39	; 57
	unsigned char numRepeats = 100, persistence = 3;
	
	adc_init();
  f0:	0e 94 4b 00 	call	0x96	; 0x96 <adc_init>
	segment_init();
  f4:	0e 94 5c 00 	call	0xb8	; 0xb8 <segment_init>
	
	while (1)
	{
		adc_conversion();
  f8:	0e 94 52 00 	call	0xa4	; 0xa4 <adc_conversion>
		digitalValue = ADCL | (ADCH << 8);
  fc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 100:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 104:	70 e0       	ldi	r23, 0x00	; 0
 106:	76 2f       	mov	r23, r22
 108:	66 27       	eor	r22, r22
 10a:	68 2b       	or	r22, r24
		voltInt = digitalValue *1.1/1.024; // voltage in mV
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	0e 94 ab 02 	call	0x556	; 0x556 <__floatunsisf>
 114:	2d ec       	ldi	r18, 0xCD	; 205
 116:	3c ec       	ldi	r19, 0xCC	; 204
 118:	4c e8       	ldi	r20, 0x8C	; 140
 11a:	5f e3       	ldi	r21, 0x3F	; 63
 11c:	0e 94 39 03 	call	0x672	; 0x672 <__mulsf3>
 120:	2f e6       	ldi	r18, 0x6F	; 111
 122:	32 e1       	ldi	r19, 0x12	; 18
 124:	43 e8       	ldi	r20, 0x83	; 131
 126:	5f e3       	ldi	r21, 0x3F	; 63
 128:	0e 94 03 02 	call	0x406	; 0x406 <__divsf3>
		tempC = ((float)(voltInt - 750)/10 +25); // temp in Celsius
 12c:	20 e0       	ldi	r18, 0x00	; 0
 12e:	30 e8       	ldi	r19, 0x80	; 128
 130:	4b e3       	ldi	r20, 0x3B	; 59
 132:	54 e4       	ldi	r21, 0x44	; 68
 134:	0e 94 96 01 	call	0x32c	; 0x32c <__subsf3>
 138:	20 e0       	ldi	r18, 0x00	; 0
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	40 e2       	ldi	r20, 0x20	; 32
 13e:	51 e4       	ldi	r21, 0x41	; 65
 140:	0e 94 03 02 	call	0x406	; 0x406 <__divsf3>
 144:	20 e0       	ldi	r18, 0x00	; 0
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	48 ec       	ldi	r20, 0xC8	; 200
 14a:	51 e4       	ldi	r21, 0x41	; 65
 14c:	0e 94 97 01 	call	0x32e	; 0x32e <__addsf3>
 150:	4b 01       	movw	r8, r22
 152:	5c 01       	movw	r10, r24
		int tempCDisplay = tempC * 10; // get rid of decimal place
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	40 e2       	ldi	r20, 0x20	; 32
 15a:	51 e4       	ldi	r21, 0x41	; 65
 15c:	0e 94 39 03 	call	0x672	; 0x672 <__mulsf3>
 160:	0e 94 75 02 	call	0x4ea	; 0x4ea <__fixsfsi>
 164:	7b 01       	movw	r14, r22
		tempF = tempC * 9 / 5 + 32; // temp in Fahrenheit
 166:	20 e0       	ldi	r18, 0x00	; 0
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	40 e1       	ldi	r20, 0x10	; 16
 16c:	51 e4       	ldi	r21, 0x41	; 65
 16e:	c5 01       	movw	r24, r10
 170:	b4 01       	movw	r22, r8
 172:	0e 94 39 03 	call	0x672	; 0x672 <__mulsf3>
 176:	20 e0       	ldi	r18, 0x00	; 0
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	40 ea       	ldi	r20, 0xA0	; 160
 17c:	50 e4       	ldi	r21, 0x40	; 64
 17e:	0e 94 03 02 	call	0x406	; 0x406 <__divsf3>
 182:	20 e0       	ldi	r18, 0x00	; 0
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	40 e0       	ldi	r20, 0x00	; 0
 188:	52 e4       	ldi	r21, 0x42	; 66
 18a:	0e 94 97 01 	call	0x32e	; 0x32e <__addsf3>
		int tempFDisplay = tempF * 10; // get rid of decimal place
 18e:	20 e0       	ldi	r18, 0x00	; 0
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	40 e2       	ldi	r20, 0x20	; 32
 194:	51 e4       	ldi	r21, 0x41	; 65
 196:	0e 94 39 03 	call	0x672	; 0x672 <__mulsf3>
 19a:	0e 94 75 02 	call	0x4ea	; 0x4ea <__fixsfsi>
 19e:	6b 01       	movw	r12, r22
		
		F_digit[0]=(tempFDisplay/100)%100; //ten's place
 1a0:	e4 e6       	ldi	r30, 0x64	; 100
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	cb 01       	movw	r24, r22
 1a6:	bf 01       	movw	r22, r30
 1a8:	0e 94 a6 03 	call	0x74c	; 0x74c <__divmodhi4>
 1ac:	cb 01       	movw	r24, r22
 1ae:	bf 01       	movw	r22, r30
 1b0:	0e 94 a6 03 	call	0x74c	; 0x74c <__divmodhi4>
 1b4:	9a 83       	std	Y+2, r25	; 0x02
 1b6:	89 83       	std	Y+1, r24	; 0x01
		F_digit[1]=(tempFDisplay/10)%10; //one's place
 1b8:	2a e0       	ldi	r18, 0x0A	; 10
 1ba:	30 e0       	ldi	r19, 0x00	; 0
 1bc:	c6 01       	movw	r24, r12
 1be:	b9 01       	movw	r22, r18
 1c0:	0e 94 a6 03 	call	0x74c	; 0x74c <__divmodhi4>
 1c4:	6c 01       	movw	r12, r24
 1c6:	cb 01       	movw	r24, r22
 1c8:	b9 01       	movw	r22, r18
 1ca:	0e 94 a6 03 	call	0x74c	; 0x74c <__divmodhi4>
 1ce:	9c 83       	std	Y+4, r25	; 0x04
 1d0:	8b 83       	std	Y+3, r24	; 0x03
		F_digit[2]=tempFDisplay%10; // decimal value
 1d2:	de 82       	std	Y+6, r13	; 0x06
 1d4:	cd 82       	std	Y+5, r12	; 0x05
		
		C_digit[0]=(tempCDisplay/100)%100; //ten's place
 1d6:	c7 01       	movw	r24, r14
 1d8:	bf 01       	movw	r22, r30
 1da:	0e 94 a6 03 	call	0x74c	; 0x74c <__divmodhi4>
 1de:	cb 01       	movw	r24, r22
 1e0:	bf 01       	movw	r22, r30
 1e2:	0e 94 a6 03 	call	0x74c	; 0x74c <__divmodhi4>
 1e6:	98 87       	std	Y+8, r25	; 0x08
 1e8:	8f 83       	std	Y+7, r24	; 0x07
		C_digit[1]=(tempCDisplay/10)%10; //one's place
 1ea:	c7 01       	movw	r24, r14
 1ec:	b9 01       	movw	r22, r18
 1ee:	0e 94 a6 03 	call	0x74c	; 0x74c <__divmodhi4>
 1f2:	fc 01       	movw	r30, r24
 1f4:	cb 01       	movw	r24, r22
 1f6:	b9 01       	movw	r22, r18
 1f8:	0e 94 a6 03 	call	0x74c	; 0x74c <__divmodhi4>
 1fc:	9a 87       	std	Y+10, r25	; 0x0a
 1fe:	89 87       	std	Y+9, r24	; 0x09
		C_digit[2]=tempCDisplay%10; //decimal place
 200:	fc 87       	std	Y+12, r31	; 0x0c
 202:	eb 87       	std	Y+11, r30	; 0x0b
		
		if (!(PINC & (1<<BUTTON))) // test if switch pressed
 204:	31 9b       	sbis	0x06, 1	; 6
 206:	46 c0       	rjmp	.+140    	; 0x294 <main+0x1ce>
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	8c c0       	rjmp	.+280    	; 0x324 <main+0x25e>
		{
			for(i=0;i<numRepeats;i++)
			{
				PORTD = ledDigits[C_digit[0]];
 20c:	ef 81       	ldd	r30, Y+7	; 0x07
 20e:	f8 85       	ldd	r31, Y+8	; 0x08
 210:	2d e0       	ldi	r18, 0x0D	; 13
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	2c 0f       	add	r18, r28
 216:	3d 1f       	adc	r19, r29
 218:	e2 0f       	add	r30, r18
 21a:	f3 1f       	adc	r31, r19
 21c:	80 81       	ld	r24, Z
 21e:	8b b9       	out	0x0b, r24	; 11
				PORTB = ~(1<<DIG1);
 220:	8d ef       	ldi	r24, 0xFD	; 253
 222:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 224:	ef ed       	ldi	r30, 0xDF	; 223
 226:	fe e2       	ldi	r31, 0x2E	; 46
 228:	31 97       	sbiw	r30, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <main+0x162>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <main+0x168>
 22e:	00 00       	nop
				_delay_ms(persistence);
				PORTD = ledDigits[C_digit[1]];
 230:	e9 85       	ldd	r30, Y+9	; 0x09
 232:	fa 85       	ldd	r31, Y+10	; 0x0a
 234:	2d e0       	ldi	r18, 0x0D	; 13
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	2c 0f       	add	r18, r28
 23a:	3d 1f       	adc	r19, r29
 23c:	e2 0f       	add	r30, r18
 23e:	f3 1f       	adc	r31, r19
 240:	80 81       	ld	r24, Z
 242:	8b b9       	out	0x0b, r24	; 11
				PORTD |= 0b10000000; //decimal point
 244:	8b b1       	in	r24, 0x0b	; 11
 246:	80 68       	ori	r24, 0x80	; 128
 248:	8b b9       	out	0x0b, r24	; 11
				PORTB = ~(1<<DIG2);
 24a:	8b ef       	ldi	r24, 0xFB	; 251
 24c:	85 b9       	out	0x05, r24	; 5
 24e:	ef ed       	ldi	r30, 0xDF	; 223
 250:	fe e2       	ldi	r31, 0x2E	; 46
 252:	31 97       	sbiw	r30, 0x01	; 1
 254:	f1 f7       	brne	.-4      	; 0x252 <main+0x18c>
 256:	00 c0       	rjmp	.+0      	; 0x258 <main+0x192>
 258:	00 00       	nop
				_delay_ms(persistence);
				PORTD = ledDigits[C_digit[2]];
 25a:	eb 85       	ldd	r30, Y+11	; 0x0b
 25c:	fc 85       	ldd	r31, Y+12	; 0x0c
 25e:	2d e0       	ldi	r18, 0x0D	; 13
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	2c 0f       	add	r18, r28
 264:	3d 1f       	adc	r19, r29
 266:	e2 0f       	add	r30, r18
 268:	f3 1f       	adc	r31, r19
 26a:	80 81       	ld	r24, Z
 26c:	8b b9       	out	0x0b, r24	; 11
				PORTB = ~(1<<DIG3);
 26e:	87 ef       	ldi	r24, 0xF7	; 247
 270:	85 b9       	out	0x05, r24	; 5
 272:	ef ed       	ldi	r30, 0xDF	; 223
 274:	fe e2       	ldi	r31, 0x2E	; 46
 276:	31 97       	sbiw	r30, 0x01	; 1
 278:	f1 f7       	brne	.-4      	; 0x276 <main+0x1b0>
 27a:	00 c0       	rjmp	.+0      	; 0x27c <main+0x1b6>
 27c:	00 00       	nop
				_delay_ms(persistence);
				PORTD = ledDegrees[1];
 27e:	1b b9       	out	0x0b, r17	; 11
				PORTB = ~(1<<DIG4);
 280:	8f ee       	ldi	r24, 0xEF	; 239
 282:	85 b9       	out	0x05, r24	; 5
 284:	ef ed       	ldi	r30, 0xDF	; 223
 286:	fe e2       	ldi	r31, 0x2E	; 46
 288:	31 97       	sbiw	r30, 0x01	; 1
 28a:	f1 f7       	brne	.-4      	; 0x288 <main+0x1c2>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0x1c8>
 28e:	00 00       	nop
		C_digit[1]=(tempCDisplay/10)%10; //one's place
		C_digit[2]=tempCDisplay%10; //decimal place
		
		if (!(PINC & (1<<BUTTON))) // test if switch pressed
		{
			for(i=0;i<numRepeats;i++)
 290:	9f 5f       	subi	r25, 0xFF	; 255
 292:	01 c0       	rjmp	.+2      	; 0x296 <main+0x1d0>
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	94 36       	cpi	r25, 0x64	; 100
 298:	08 f4       	brcc	.+2      	; 0x29c <main+0x1d6>
 29a:	b8 cf       	rjmp	.-144    	; 0x20c <main+0x146>
 29c:	2d cf       	rjmp	.-422    	; 0xf8 <main+0x32>
		}
		else
		{
			for(i=0;i<numRepeats;i++)
			{
				PORTD = ledDigits[F_digit[0]];
 29e:	e9 81       	ldd	r30, Y+1	; 0x01
 2a0:	fa 81       	ldd	r31, Y+2	; 0x02
 2a2:	2d e0       	ldi	r18, 0x0D	; 13
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	2c 0f       	add	r18, r28
 2a8:	3d 1f       	adc	r19, r29
 2aa:	e2 0f       	add	r30, r18
 2ac:	f3 1f       	adc	r31, r19
 2ae:	80 81       	ld	r24, Z
 2b0:	8b b9       	out	0x0b, r24	; 11
				PORTB = ~(1<<DIG1);
 2b2:	8d ef       	ldi	r24, 0xFD	; 253
 2b4:	85 b9       	out	0x05, r24	; 5
 2b6:	ef ed       	ldi	r30, 0xDF	; 223
 2b8:	fe e2       	ldi	r31, 0x2E	; 46
 2ba:	31 97       	sbiw	r30, 0x01	; 1
 2bc:	f1 f7       	brne	.-4      	; 0x2ba <main+0x1f4>
 2be:	00 c0       	rjmp	.+0      	; 0x2c0 <main+0x1fa>
 2c0:	00 00       	nop
				_delay_ms(persistence);
				PORTD = ledDigits[F_digit[1]];
 2c2:	eb 81       	ldd	r30, Y+3	; 0x03
 2c4:	fc 81       	ldd	r31, Y+4	; 0x04
 2c6:	2d e0       	ldi	r18, 0x0D	; 13
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	2c 0f       	add	r18, r28
 2cc:	3d 1f       	adc	r19, r29
 2ce:	e2 0f       	add	r30, r18
 2d0:	f3 1f       	adc	r31, r19
 2d2:	80 81       	ld	r24, Z
 2d4:	8b b9       	out	0x0b, r24	; 11
				PORTD |= 0b10000000; //decimal point
 2d6:	8b b1       	in	r24, 0x0b	; 11
 2d8:	80 68       	ori	r24, 0x80	; 128
 2da:	8b b9       	out	0x0b, r24	; 11
				PORTB = ~(1<<DIG2);
 2dc:	8b ef       	ldi	r24, 0xFB	; 251
 2de:	85 b9       	out	0x05, r24	; 5
 2e0:	ef ed       	ldi	r30, 0xDF	; 223
 2e2:	fe e2       	ldi	r31, 0x2E	; 46
 2e4:	31 97       	sbiw	r30, 0x01	; 1
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <main+0x21e>
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <main+0x224>
 2ea:	00 00       	nop
				_delay_ms(persistence);
				PORTD = ledDigits[F_digit[2]];
 2ec:	ed 81       	ldd	r30, Y+5	; 0x05
 2ee:	fe 81       	ldd	r31, Y+6	; 0x06
 2f0:	2d e0       	ldi	r18, 0x0D	; 13
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	2c 0f       	add	r18, r28
 2f6:	3d 1f       	adc	r19, r29
 2f8:	e2 0f       	add	r30, r18
 2fa:	f3 1f       	adc	r31, r19
 2fc:	80 81       	ld	r24, Z
 2fe:	8b b9       	out	0x0b, r24	; 11
				PORTB = ~(1<<DIG3);
 300:	87 ef       	ldi	r24, 0xF7	; 247
 302:	85 b9       	out	0x05, r24	; 5
 304:	ef ed       	ldi	r30, 0xDF	; 223
 306:	fe e2       	ldi	r31, 0x2E	; 46
 308:	31 97       	sbiw	r30, 0x01	; 1
 30a:	f1 f7       	brne	.-4      	; 0x308 <main+0x242>
 30c:	00 c0       	rjmp	.+0      	; 0x30e <main+0x248>
 30e:	00 00       	nop
				_delay_ms(persistence);
				PORTD = ledDegrees[0];
 310:	0b b9       	out	0x0b, r16	; 11
				PORTB = ~(1<<DIG4);
 312:	8f ee       	ldi	r24, 0xEF	; 239
 314:	85 b9       	out	0x05, r24	; 5
 316:	ef ed       	ldi	r30, 0xDF	; 223
 318:	fe e2       	ldi	r31, 0x2E	; 46
 31a:	31 97       	sbiw	r30, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <main+0x254>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <main+0x25a>
 320:	00 00       	nop
				_delay_ms(persistence);
			}
		}
		else
		{
			for(i=0;i<numRepeats;i++)
 322:	9f 5f       	subi	r25, 0xFF	; 255
 324:	94 36       	cpi	r25, 0x64	; 100
 326:	08 f4       	brcc	.+2      	; 0x32a <main+0x264>
 328:	ba cf       	rjmp	.-140    	; 0x29e <main+0x1d8>
 32a:	e6 ce       	rjmp	.-564    	; 0xf8 <main+0x32>

0000032c <__subsf3>:
 32c:	50 58       	subi	r21, 0x80	; 128

0000032e <__addsf3>:
 32e:	bb 27       	eor	r27, r27
 330:	aa 27       	eor	r26, r26
 332:	0e 94 ae 01 	call	0x35c	; 0x35c <__addsf3x>
 336:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_round>
 33a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_pscA>
 33e:	38 f0       	brcs	.+14     	; 0x34e <__addsf3+0x20>
 340:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__fp_pscB>
 344:	20 f0       	brcs	.+8      	; 0x34e <__addsf3+0x20>
 346:	39 f4       	brne	.+14     	; 0x356 <__addsf3+0x28>
 348:	9f 3f       	cpi	r25, 0xFF	; 255
 34a:	19 f4       	brne	.+6      	; 0x352 <__addsf3+0x24>
 34c:	26 f4       	brtc	.+8      	; 0x356 <__addsf3+0x28>
 34e:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__fp_nan>
 352:	0e f4       	brtc	.+2      	; 0x356 <__addsf3+0x28>
 354:	e0 95       	com	r30
 356:	e7 fb       	bst	r30, 7
 358:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <__fp_inf>

0000035c <__addsf3x>:
 35c:	e9 2f       	mov	r30, r25
 35e:	0e 94 10 03 	call	0x620	; 0x620 <__fp_split3>
 362:	58 f3       	brcs	.-42     	; 0x33a <__addsf3+0xc>
 364:	ba 17       	cp	r27, r26
 366:	62 07       	cpc	r22, r18
 368:	73 07       	cpc	r23, r19
 36a:	84 07       	cpc	r24, r20
 36c:	95 07       	cpc	r25, r21
 36e:	20 f0       	brcs	.+8      	; 0x378 <__addsf3x+0x1c>
 370:	79 f4       	brne	.+30     	; 0x390 <__addsf3x+0x34>
 372:	a6 f5       	brtc	.+104    	; 0x3dc <__addsf3x+0x80>
 374:	0c 94 32 03 	jmp	0x664	; 0x664 <__fp_zero>
 378:	0e f4       	brtc	.+2      	; 0x37c <__addsf3x+0x20>
 37a:	e0 95       	com	r30
 37c:	0b 2e       	mov	r0, r27
 37e:	ba 2f       	mov	r27, r26
 380:	a0 2d       	mov	r26, r0
 382:	0b 01       	movw	r0, r22
 384:	b9 01       	movw	r22, r18
 386:	90 01       	movw	r18, r0
 388:	0c 01       	movw	r0, r24
 38a:	ca 01       	movw	r24, r20
 38c:	a0 01       	movw	r20, r0
 38e:	11 24       	eor	r1, r1
 390:	ff 27       	eor	r31, r31
 392:	59 1b       	sub	r21, r25
 394:	99 f0       	breq	.+38     	; 0x3bc <__addsf3x+0x60>
 396:	59 3f       	cpi	r21, 0xF9	; 249
 398:	50 f4       	brcc	.+20     	; 0x3ae <__addsf3x+0x52>
 39a:	50 3e       	cpi	r21, 0xE0	; 224
 39c:	68 f1       	brcs	.+90     	; 0x3f8 <__addsf3x+0x9c>
 39e:	1a 16       	cp	r1, r26
 3a0:	f0 40       	sbci	r31, 0x00	; 0
 3a2:	a2 2f       	mov	r26, r18
 3a4:	23 2f       	mov	r18, r19
 3a6:	34 2f       	mov	r19, r20
 3a8:	44 27       	eor	r20, r20
 3aa:	58 5f       	subi	r21, 0xF8	; 248
 3ac:	f3 cf       	rjmp	.-26     	; 0x394 <__addsf3x+0x38>
 3ae:	46 95       	lsr	r20
 3b0:	37 95       	ror	r19
 3b2:	27 95       	ror	r18
 3b4:	a7 95       	ror	r26
 3b6:	f0 40       	sbci	r31, 0x00	; 0
 3b8:	53 95       	inc	r21
 3ba:	c9 f7       	brne	.-14     	; 0x3ae <__addsf3x+0x52>
 3bc:	7e f4       	brtc	.+30     	; 0x3dc <__addsf3x+0x80>
 3be:	1f 16       	cp	r1, r31
 3c0:	ba 0b       	sbc	r27, r26
 3c2:	62 0b       	sbc	r22, r18
 3c4:	73 0b       	sbc	r23, r19
 3c6:	84 0b       	sbc	r24, r20
 3c8:	ba f0       	brmi	.+46     	; 0x3f8 <__addsf3x+0x9c>
 3ca:	91 50       	subi	r25, 0x01	; 1
 3cc:	a1 f0       	breq	.+40     	; 0x3f6 <__addsf3x+0x9a>
 3ce:	ff 0f       	add	r31, r31
 3d0:	bb 1f       	adc	r27, r27
 3d2:	66 1f       	adc	r22, r22
 3d4:	77 1f       	adc	r23, r23
 3d6:	88 1f       	adc	r24, r24
 3d8:	c2 f7       	brpl	.-16     	; 0x3ca <__addsf3x+0x6e>
 3da:	0e c0       	rjmp	.+28     	; 0x3f8 <__addsf3x+0x9c>
 3dc:	ba 0f       	add	r27, r26
 3de:	62 1f       	adc	r22, r18
 3e0:	73 1f       	adc	r23, r19
 3e2:	84 1f       	adc	r24, r20
 3e4:	48 f4       	brcc	.+18     	; 0x3f8 <__addsf3x+0x9c>
 3e6:	87 95       	ror	r24
 3e8:	77 95       	ror	r23
 3ea:	67 95       	ror	r22
 3ec:	b7 95       	ror	r27
 3ee:	f7 95       	ror	r31
 3f0:	9e 3f       	cpi	r25, 0xFE	; 254
 3f2:	08 f0       	brcs	.+2      	; 0x3f6 <__addsf3x+0x9a>
 3f4:	b0 cf       	rjmp	.-160    	; 0x356 <__addsf3+0x28>
 3f6:	93 95       	inc	r25
 3f8:	88 0f       	add	r24, r24
 3fa:	08 f0       	brcs	.+2      	; 0x3fe <__addsf3x+0xa2>
 3fc:	99 27       	eor	r25, r25
 3fe:	ee 0f       	add	r30, r30
 400:	97 95       	ror	r25
 402:	87 95       	ror	r24
 404:	08 95       	ret

00000406 <__divsf3>:
 406:	0e 94 17 02 	call	0x42e	; 0x42e <__divsf3x>
 40a:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_round>
 40e:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__fp_pscB>
 412:	58 f0       	brcs	.+22     	; 0x42a <__divsf3+0x24>
 414:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_pscA>
 418:	40 f0       	brcs	.+16     	; 0x42a <__divsf3+0x24>
 41a:	29 f4       	brne	.+10     	; 0x426 <__divsf3+0x20>
 41c:	5f 3f       	cpi	r21, 0xFF	; 255
 41e:	29 f0       	breq	.+10     	; 0x42a <__divsf3+0x24>
 420:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <__fp_inf>
 424:	51 11       	cpse	r21, r1
 426:	0c 94 33 03 	jmp	0x666	; 0x666 <__fp_szero>
 42a:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__fp_nan>

0000042e <__divsf3x>:
 42e:	0e 94 10 03 	call	0x620	; 0x620 <__fp_split3>
 432:	68 f3       	brcs	.-38     	; 0x40e <__divsf3+0x8>

00000434 <__divsf3_pse>:
 434:	99 23       	and	r25, r25
 436:	b1 f3       	breq	.-20     	; 0x424 <__divsf3+0x1e>
 438:	55 23       	and	r21, r21
 43a:	91 f3       	breq	.-28     	; 0x420 <__divsf3+0x1a>
 43c:	95 1b       	sub	r25, r21
 43e:	55 0b       	sbc	r21, r21
 440:	bb 27       	eor	r27, r27
 442:	aa 27       	eor	r26, r26
 444:	62 17       	cp	r22, r18
 446:	73 07       	cpc	r23, r19
 448:	84 07       	cpc	r24, r20
 44a:	38 f0       	brcs	.+14     	; 0x45a <__divsf3_pse+0x26>
 44c:	9f 5f       	subi	r25, 0xFF	; 255
 44e:	5f 4f       	sbci	r21, 0xFF	; 255
 450:	22 0f       	add	r18, r18
 452:	33 1f       	adc	r19, r19
 454:	44 1f       	adc	r20, r20
 456:	aa 1f       	adc	r26, r26
 458:	a9 f3       	breq	.-22     	; 0x444 <__divsf3_pse+0x10>
 45a:	35 d0       	rcall	.+106    	; 0x4c6 <__divsf3_pse+0x92>
 45c:	0e 2e       	mov	r0, r30
 45e:	3a f0       	brmi	.+14     	; 0x46e <__divsf3_pse+0x3a>
 460:	e0 e8       	ldi	r30, 0x80	; 128
 462:	32 d0       	rcall	.+100    	; 0x4c8 <__divsf3_pse+0x94>
 464:	91 50       	subi	r25, 0x01	; 1
 466:	50 40       	sbci	r21, 0x00	; 0
 468:	e6 95       	lsr	r30
 46a:	00 1c       	adc	r0, r0
 46c:	ca f7       	brpl	.-14     	; 0x460 <__divsf3_pse+0x2c>
 46e:	2b d0       	rcall	.+86     	; 0x4c6 <__divsf3_pse+0x92>
 470:	fe 2f       	mov	r31, r30
 472:	29 d0       	rcall	.+82     	; 0x4c6 <__divsf3_pse+0x92>
 474:	66 0f       	add	r22, r22
 476:	77 1f       	adc	r23, r23
 478:	88 1f       	adc	r24, r24
 47a:	bb 1f       	adc	r27, r27
 47c:	26 17       	cp	r18, r22
 47e:	37 07       	cpc	r19, r23
 480:	48 07       	cpc	r20, r24
 482:	ab 07       	cpc	r26, r27
 484:	b0 e8       	ldi	r27, 0x80	; 128
 486:	09 f0       	breq	.+2      	; 0x48a <__divsf3_pse+0x56>
 488:	bb 0b       	sbc	r27, r27
 48a:	80 2d       	mov	r24, r0
 48c:	bf 01       	movw	r22, r30
 48e:	ff 27       	eor	r31, r31
 490:	93 58       	subi	r25, 0x83	; 131
 492:	5f 4f       	sbci	r21, 0xFF	; 255
 494:	3a f0       	brmi	.+14     	; 0x4a4 <__divsf3_pse+0x70>
 496:	9e 3f       	cpi	r25, 0xFE	; 254
 498:	51 05       	cpc	r21, r1
 49a:	78 f0       	brcs	.+30     	; 0x4ba <__divsf3_pse+0x86>
 49c:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <__fp_inf>
 4a0:	0c 94 33 03 	jmp	0x666	; 0x666 <__fp_szero>
 4a4:	5f 3f       	cpi	r21, 0xFF	; 255
 4a6:	e4 f3       	brlt	.-8      	; 0x4a0 <__divsf3_pse+0x6c>
 4a8:	98 3e       	cpi	r25, 0xE8	; 232
 4aa:	d4 f3       	brlt	.-12     	; 0x4a0 <__divsf3_pse+0x6c>
 4ac:	86 95       	lsr	r24
 4ae:	77 95       	ror	r23
 4b0:	67 95       	ror	r22
 4b2:	b7 95       	ror	r27
 4b4:	f7 95       	ror	r31
 4b6:	9f 5f       	subi	r25, 0xFF	; 255
 4b8:	c9 f7       	brne	.-14     	; 0x4ac <__divsf3_pse+0x78>
 4ba:	88 0f       	add	r24, r24
 4bc:	91 1d       	adc	r25, r1
 4be:	96 95       	lsr	r25
 4c0:	87 95       	ror	r24
 4c2:	97 f9       	bld	r25, 7
 4c4:	08 95       	ret
 4c6:	e1 e0       	ldi	r30, 0x01	; 1
 4c8:	66 0f       	add	r22, r22
 4ca:	77 1f       	adc	r23, r23
 4cc:	88 1f       	adc	r24, r24
 4ce:	bb 1f       	adc	r27, r27
 4d0:	62 17       	cp	r22, r18
 4d2:	73 07       	cpc	r23, r19
 4d4:	84 07       	cpc	r24, r20
 4d6:	ba 07       	cpc	r27, r26
 4d8:	20 f0       	brcs	.+8      	; 0x4e2 <__divsf3_pse+0xae>
 4da:	62 1b       	sub	r22, r18
 4dc:	73 0b       	sbc	r23, r19
 4de:	84 0b       	sbc	r24, r20
 4e0:	ba 0b       	sbc	r27, r26
 4e2:	ee 1f       	adc	r30, r30
 4e4:	88 f7       	brcc	.-30     	; 0x4c8 <__divsf3_pse+0x94>
 4e6:	e0 95       	com	r30
 4e8:	08 95       	ret

000004ea <__fixsfsi>:
 4ea:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <__fixunssfsi>
 4ee:	68 94       	set
 4f0:	b1 11       	cpse	r27, r1
 4f2:	0c 94 33 03 	jmp	0x666	; 0x666 <__fp_szero>
 4f6:	08 95       	ret

000004f8 <__fixunssfsi>:
 4f8:	0e 94 18 03 	call	0x630	; 0x630 <__fp_splitA>
 4fc:	88 f0       	brcs	.+34     	; 0x520 <__fixunssfsi+0x28>
 4fe:	9f 57       	subi	r25, 0x7F	; 127
 500:	98 f0       	brcs	.+38     	; 0x528 <__fixunssfsi+0x30>
 502:	b9 2f       	mov	r27, r25
 504:	99 27       	eor	r25, r25
 506:	b7 51       	subi	r27, 0x17	; 23
 508:	b0 f0       	brcs	.+44     	; 0x536 <__fixunssfsi+0x3e>
 50a:	e1 f0       	breq	.+56     	; 0x544 <__fixunssfsi+0x4c>
 50c:	66 0f       	add	r22, r22
 50e:	77 1f       	adc	r23, r23
 510:	88 1f       	adc	r24, r24
 512:	99 1f       	adc	r25, r25
 514:	1a f0       	brmi	.+6      	; 0x51c <__fixunssfsi+0x24>
 516:	ba 95       	dec	r27
 518:	c9 f7       	brne	.-14     	; 0x50c <__fixunssfsi+0x14>
 51a:	14 c0       	rjmp	.+40     	; 0x544 <__fixunssfsi+0x4c>
 51c:	b1 30       	cpi	r27, 0x01	; 1
 51e:	91 f0       	breq	.+36     	; 0x544 <__fixunssfsi+0x4c>
 520:	0e 94 32 03 	call	0x664	; 0x664 <__fp_zero>
 524:	b1 e0       	ldi	r27, 0x01	; 1
 526:	08 95       	ret
 528:	0c 94 32 03 	jmp	0x664	; 0x664 <__fp_zero>
 52c:	67 2f       	mov	r22, r23
 52e:	78 2f       	mov	r23, r24
 530:	88 27       	eor	r24, r24
 532:	b8 5f       	subi	r27, 0xF8	; 248
 534:	39 f0       	breq	.+14     	; 0x544 <__fixunssfsi+0x4c>
 536:	b9 3f       	cpi	r27, 0xF9	; 249
 538:	cc f3       	brlt	.-14     	; 0x52c <__fixunssfsi+0x34>
 53a:	86 95       	lsr	r24
 53c:	77 95       	ror	r23
 53e:	67 95       	ror	r22
 540:	b3 95       	inc	r27
 542:	d9 f7       	brne	.-10     	; 0x53a <__fixunssfsi+0x42>
 544:	3e f4       	brtc	.+14     	; 0x554 <__fixunssfsi+0x5c>
 546:	90 95       	com	r25
 548:	80 95       	com	r24
 54a:	70 95       	com	r23
 54c:	61 95       	neg	r22
 54e:	7f 4f       	sbci	r23, 0xFF	; 255
 550:	8f 4f       	sbci	r24, 0xFF	; 255
 552:	9f 4f       	sbci	r25, 0xFF	; 255
 554:	08 95       	ret

00000556 <__floatunsisf>:
 556:	e8 94       	clt
 558:	09 c0       	rjmp	.+18     	; 0x56c <__floatsisf+0x12>

0000055a <__floatsisf>:
 55a:	97 fb       	bst	r25, 7
 55c:	3e f4       	brtc	.+14     	; 0x56c <__floatsisf+0x12>
 55e:	90 95       	com	r25
 560:	80 95       	com	r24
 562:	70 95       	com	r23
 564:	61 95       	neg	r22
 566:	7f 4f       	sbci	r23, 0xFF	; 255
 568:	8f 4f       	sbci	r24, 0xFF	; 255
 56a:	9f 4f       	sbci	r25, 0xFF	; 255
 56c:	99 23       	and	r25, r25
 56e:	a9 f0       	breq	.+42     	; 0x59a <__floatsisf+0x40>
 570:	f9 2f       	mov	r31, r25
 572:	96 e9       	ldi	r25, 0x96	; 150
 574:	bb 27       	eor	r27, r27
 576:	93 95       	inc	r25
 578:	f6 95       	lsr	r31
 57a:	87 95       	ror	r24
 57c:	77 95       	ror	r23
 57e:	67 95       	ror	r22
 580:	b7 95       	ror	r27
 582:	f1 11       	cpse	r31, r1
 584:	f8 cf       	rjmp	.-16     	; 0x576 <__floatsisf+0x1c>
 586:	fa f4       	brpl	.+62     	; 0x5c6 <__floatsisf+0x6c>
 588:	bb 0f       	add	r27, r27
 58a:	11 f4       	brne	.+4      	; 0x590 <__floatsisf+0x36>
 58c:	60 ff       	sbrs	r22, 0
 58e:	1b c0       	rjmp	.+54     	; 0x5c6 <__floatsisf+0x6c>
 590:	6f 5f       	subi	r22, 0xFF	; 255
 592:	7f 4f       	sbci	r23, 0xFF	; 255
 594:	8f 4f       	sbci	r24, 0xFF	; 255
 596:	9f 4f       	sbci	r25, 0xFF	; 255
 598:	16 c0       	rjmp	.+44     	; 0x5c6 <__floatsisf+0x6c>
 59a:	88 23       	and	r24, r24
 59c:	11 f0       	breq	.+4      	; 0x5a2 <__floatsisf+0x48>
 59e:	96 e9       	ldi	r25, 0x96	; 150
 5a0:	11 c0       	rjmp	.+34     	; 0x5c4 <__floatsisf+0x6a>
 5a2:	77 23       	and	r23, r23
 5a4:	21 f0       	breq	.+8      	; 0x5ae <__floatsisf+0x54>
 5a6:	9e e8       	ldi	r25, 0x8E	; 142
 5a8:	87 2f       	mov	r24, r23
 5aa:	76 2f       	mov	r23, r22
 5ac:	05 c0       	rjmp	.+10     	; 0x5b8 <__floatsisf+0x5e>
 5ae:	66 23       	and	r22, r22
 5b0:	71 f0       	breq	.+28     	; 0x5ce <__floatsisf+0x74>
 5b2:	96 e8       	ldi	r25, 0x86	; 134
 5b4:	86 2f       	mov	r24, r22
 5b6:	70 e0       	ldi	r23, 0x00	; 0
 5b8:	60 e0       	ldi	r22, 0x00	; 0
 5ba:	2a f0       	brmi	.+10     	; 0x5c6 <__floatsisf+0x6c>
 5bc:	9a 95       	dec	r25
 5be:	66 0f       	add	r22, r22
 5c0:	77 1f       	adc	r23, r23
 5c2:	88 1f       	adc	r24, r24
 5c4:	da f7       	brpl	.-10     	; 0x5bc <__floatsisf+0x62>
 5c6:	88 0f       	add	r24, r24
 5c8:	96 95       	lsr	r25
 5ca:	87 95       	ror	r24
 5cc:	97 f9       	bld	r25, 7
 5ce:	08 95       	ret

000005d0 <__fp_inf>:
 5d0:	97 f9       	bld	r25, 7
 5d2:	9f 67       	ori	r25, 0x7F	; 127
 5d4:	80 e8       	ldi	r24, 0x80	; 128
 5d6:	70 e0       	ldi	r23, 0x00	; 0
 5d8:	60 e0       	ldi	r22, 0x00	; 0
 5da:	08 95       	ret

000005dc <__fp_nan>:
 5dc:	9f ef       	ldi	r25, 0xFF	; 255
 5de:	80 ec       	ldi	r24, 0xC0	; 192
 5e0:	08 95       	ret

000005e2 <__fp_pscA>:
 5e2:	00 24       	eor	r0, r0
 5e4:	0a 94       	dec	r0
 5e6:	16 16       	cp	r1, r22
 5e8:	17 06       	cpc	r1, r23
 5ea:	18 06       	cpc	r1, r24
 5ec:	09 06       	cpc	r0, r25
 5ee:	08 95       	ret

000005f0 <__fp_pscB>:
 5f0:	00 24       	eor	r0, r0
 5f2:	0a 94       	dec	r0
 5f4:	12 16       	cp	r1, r18
 5f6:	13 06       	cpc	r1, r19
 5f8:	14 06       	cpc	r1, r20
 5fa:	05 06       	cpc	r0, r21
 5fc:	08 95       	ret

000005fe <__fp_round>:
 5fe:	09 2e       	mov	r0, r25
 600:	03 94       	inc	r0
 602:	00 0c       	add	r0, r0
 604:	11 f4       	brne	.+4      	; 0x60a <__fp_round+0xc>
 606:	88 23       	and	r24, r24
 608:	52 f0       	brmi	.+20     	; 0x61e <__fp_round+0x20>
 60a:	bb 0f       	add	r27, r27
 60c:	40 f4       	brcc	.+16     	; 0x61e <__fp_round+0x20>
 60e:	bf 2b       	or	r27, r31
 610:	11 f4       	brne	.+4      	; 0x616 <__fp_round+0x18>
 612:	60 ff       	sbrs	r22, 0
 614:	04 c0       	rjmp	.+8      	; 0x61e <__fp_round+0x20>
 616:	6f 5f       	subi	r22, 0xFF	; 255
 618:	7f 4f       	sbci	r23, 0xFF	; 255
 61a:	8f 4f       	sbci	r24, 0xFF	; 255
 61c:	9f 4f       	sbci	r25, 0xFF	; 255
 61e:	08 95       	ret

00000620 <__fp_split3>:
 620:	57 fd       	sbrc	r21, 7
 622:	90 58       	subi	r25, 0x80	; 128
 624:	44 0f       	add	r20, r20
 626:	55 1f       	adc	r21, r21
 628:	59 f0       	breq	.+22     	; 0x640 <__fp_splitA+0x10>
 62a:	5f 3f       	cpi	r21, 0xFF	; 255
 62c:	71 f0       	breq	.+28     	; 0x64a <__fp_splitA+0x1a>
 62e:	47 95       	ror	r20

00000630 <__fp_splitA>:
 630:	88 0f       	add	r24, r24
 632:	97 fb       	bst	r25, 7
 634:	99 1f       	adc	r25, r25
 636:	61 f0       	breq	.+24     	; 0x650 <__fp_splitA+0x20>
 638:	9f 3f       	cpi	r25, 0xFF	; 255
 63a:	79 f0       	breq	.+30     	; 0x65a <__fp_splitA+0x2a>
 63c:	87 95       	ror	r24
 63e:	08 95       	ret
 640:	12 16       	cp	r1, r18
 642:	13 06       	cpc	r1, r19
 644:	14 06       	cpc	r1, r20
 646:	55 1f       	adc	r21, r21
 648:	f2 cf       	rjmp	.-28     	; 0x62e <__fp_split3+0xe>
 64a:	46 95       	lsr	r20
 64c:	f1 df       	rcall	.-30     	; 0x630 <__fp_splitA>
 64e:	08 c0       	rjmp	.+16     	; 0x660 <__fp_splitA+0x30>
 650:	16 16       	cp	r1, r22
 652:	17 06       	cpc	r1, r23
 654:	18 06       	cpc	r1, r24
 656:	99 1f       	adc	r25, r25
 658:	f1 cf       	rjmp	.-30     	; 0x63c <__fp_splitA+0xc>
 65a:	86 95       	lsr	r24
 65c:	71 05       	cpc	r23, r1
 65e:	61 05       	cpc	r22, r1
 660:	08 94       	sec
 662:	08 95       	ret

00000664 <__fp_zero>:
 664:	e8 94       	clt

00000666 <__fp_szero>:
 666:	bb 27       	eor	r27, r27
 668:	66 27       	eor	r22, r22
 66a:	77 27       	eor	r23, r23
 66c:	cb 01       	movw	r24, r22
 66e:	97 f9       	bld	r25, 7
 670:	08 95       	ret

00000672 <__mulsf3>:
 672:	0e 94 4c 03 	call	0x698	; 0x698 <__mulsf3x>
 676:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_round>
 67a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_pscA>
 67e:	38 f0       	brcs	.+14     	; 0x68e <__mulsf3+0x1c>
 680:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__fp_pscB>
 684:	20 f0       	brcs	.+8      	; 0x68e <__mulsf3+0x1c>
 686:	95 23       	and	r25, r21
 688:	11 f0       	breq	.+4      	; 0x68e <__mulsf3+0x1c>
 68a:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <__fp_inf>
 68e:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__fp_nan>
 692:	11 24       	eor	r1, r1
 694:	0c 94 33 03 	jmp	0x666	; 0x666 <__fp_szero>

00000698 <__mulsf3x>:
 698:	0e 94 10 03 	call	0x620	; 0x620 <__fp_split3>
 69c:	70 f3       	brcs	.-36     	; 0x67a <__mulsf3+0x8>

0000069e <__mulsf3_pse>:
 69e:	95 9f       	mul	r25, r21
 6a0:	c1 f3       	breq	.-16     	; 0x692 <__mulsf3+0x20>
 6a2:	95 0f       	add	r25, r21
 6a4:	50 e0       	ldi	r21, 0x00	; 0
 6a6:	55 1f       	adc	r21, r21
 6a8:	62 9f       	mul	r22, r18
 6aa:	f0 01       	movw	r30, r0
 6ac:	72 9f       	mul	r23, r18
 6ae:	bb 27       	eor	r27, r27
 6b0:	f0 0d       	add	r31, r0
 6b2:	b1 1d       	adc	r27, r1
 6b4:	63 9f       	mul	r22, r19
 6b6:	aa 27       	eor	r26, r26
 6b8:	f0 0d       	add	r31, r0
 6ba:	b1 1d       	adc	r27, r1
 6bc:	aa 1f       	adc	r26, r26
 6be:	64 9f       	mul	r22, r20
 6c0:	66 27       	eor	r22, r22
 6c2:	b0 0d       	add	r27, r0
 6c4:	a1 1d       	adc	r26, r1
 6c6:	66 1f       	adc	r22, r22
 6c8:	82 9f       	mul	r24, r18
 6ca:	22 27       	eor	r18, r18
 6cc:	b0 0d       	add	r27, r0
 6ce:	a1 1d       	adc	r26, r1
 6d0:	62 1f       	adc	r22, r18
 6d2:	73 9f       	mul	r23, r19
 6d4:	b0 0d       	add	r27, r0
 6d6:	a1 1d       	adc	r26, r1
 6d8:	62 1f       	adc	r22, r18
 6da:	83 9f       	mul	r24, r19
 6dc:	a0 0d       	add	r26, r0
 6de:	61 1d       	adc	r22, r1
 6e0:	22 1f       	adc	r18, r18
 6e2:	74 9f       	mul	r23, r20
 6e4:	33 27       	eor	r19, r19
 6e6:	a0 0d       	add	r26, r0
 6e8:	61 1d       	adc	r22, r1
 6ea:	23 1f       	adc	r18, r19
 6ec:	84 9f       	mul	r24, r20
 6ee:	60 0d       	add	r22, r0
 6f0:	21 1d       	adc	r18, r1
 6f2:	82 2f       	mov	r24, r18
 6f4:	76 2f       	mov	r23, r22
 6f6:	6a 2f       	mov	r22, r26
 6f8:	11 24       	eor	r1, r1
 6fa:	9f 57       	subi	r25, 0x7F	; 127
 6fc:	50 40       	sbci	r21, 0x00	; 0
 6fe:	9a f0       	brmi	.+38     	; 0x726 <__mulsf3_pse+0x88>
 700:	f1 f0       	breq	.+60     	; 0x73e <__mulsf3_pse+0xa0>
 702:	88 23       	and	r24, r24
 704:	4a f0       	brmi	.+18     	; 0x718 <__mulsf3_pse+0x7a>
 706:	ee 0f       	add	r30, r30
 708:	ff 1f       	adc	r31, r31
 70a:	bb 1f       	adc	r27, r27
 70c:	66 1f       	adc	r22, r22
 70e:	77 1f       	adc	r23, r23
 710:	88 1f       	adc	r24, r24
 712:	91 50       	subi	r25, 0x01	; 1
 714:	50 40       	sbci	r21, 0x00	; 0
 716:	a9 f7       	brne	.-22     	; 0x702 <__mulsf3_pse+0x64>
 718:	9e 3f       	cpi	r25, 0xFE	; 254
 71a:	51 05       	cpc	r21, r1
 71c:	80 f0       	brcs	.+32     	; 0x73e <__mulsf3_pse+0xa0>
 71e:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <__fp_inf>
 722:	0c 94 33 03 	jmp	0x666	; 0x666 <__fp_szero>
 726:	5f 3f       	cpi	r21, 0xFF	; 255
 728:	e4 f3       	brlt	.-8      	; 0x722 <__mulsf3_pse+0x84>
 72a:	98 3e       	cpi	r25, 0xE8	; 232
 72c:	d4 f3       	brlt	.-12     	; 0x722 <__mulsf3_pse+0x84>
 72e:	86 95       	lsr	r24
 730:	77 95       	ror	r23
 732:	67 95       	ror	r22
 734:	b7 95       	ror	r27
 736:	f7 95       	ror	r31
 738:	e7 95       	ror	r30
 73a:	9f 5f       	subi	r25, 0xFF	; 255
 73c:	c1 f7       	brne	.-16     	; 0x72e <__mulsf3_pse+0x90>
 73e:	fe 2b       	or	r31, r30
 740:	88 0f       	add	r24, r24
 742:	91 1d       	adc	r25, r1
 744:	96 95       	lsr	r25
 746:	87 95       	ror	r24
 748:	97 f9       	bld	r25, 7
 74a:	08 95       	ret

0000074c <__divmodhi4>:
 74c:	97 fb       	bst	r25, 7
 74e:	07 2e       	mov	r0, r23
 750:	16 f4       	brtc	.+4      	; 0x756 <__divmodhi4+0xa>
 752:	00 94       	com	r0
 754:	07 d0       	rcall	.+14     	; 0x764 <__divmodhi4_neg1>
 756:	77 fd       	sbrc	r23, 7
 758:	09 d0       	rcall	.+18     	; 0x76c <__divmodhi4_neg2>
 75a:	0e 94 ba 03 	call	0x774	; 0x774 <__udivmodhi4>
 75e:	07 fc       	sbrc	r0, 7
 760:	05 d0       	rcall	.+10     	; 0x76c <__divmodhi4_neg2>
 762:	3e f4       	brtc	.+14     	; 0x772 <__divmodhi4_exit>

00000764 <__divmodhi4_neg1>:
 764:	90 95       	com	r25
 766:	81 95       	neg	r24
 768:	9f 4f       	sbci	r25, 0xFF	; 255
 76a:	08 95       	ret

0000076c <__divmodhi4_neg2>:
 76c:	70 95       	com	r23
 76e:	61 95       	neg	r22
 770:	7f 4f       	sbci	r23, 0xFF	; 255

00000772 <__divmodhi4_exit>:
 772:	08 95       	ret

00000774 <__udivmodhi4>:
 774:	aa 1b       	sub	r26, r26
 776:	bb 1b       	sub	r27, r27
 778:	51 e1       	ldi	r21, 0x11	; 17
 77a:	07 c0       	rjmp	.+14     	; 0x78a <__udivmodhi4_ep>

0000077c <__udivmodhi4_loop>:
 77c:	aa 1f       	adc	r26, r26
 77e:	bb 1f       	adc	r27, r27
 780:	a6 17       	cp	r26, r22
 782:	b7 07       	cpc	r27, r23
 784:	10 f0       	brcs	.+4      	; 0x78a <__udivmodhi4_ep>
 786:	a6 1b       	sub	r26, r22
 788:	b7 0b       	sbc	r27, r23

0000078a <__udivmodhi4_ep>:
 78a:	88 1f       	adc	r24, r24
 78c:	99 1f       	adc	r25, r25
 78e:	5a 95       	dec	r21
 790:	a9 f7       	brne	.-22     	; 0x77c <__udivmodhi4_loop>
 792:	80 95       	com	r24
 794:	90 95       	com	r25
 796:	bc 01       	movw	r22, r24
 798:	cd 01       	movw	r24, r26
 79a:	08 95       	ret

0000079c <_exit>:
 79c:	f8 94       	cli

0000079e <__stop_program>:
 79e:	ff cf       	rjmp	.-2      	; 0x79e <__stop_program>
